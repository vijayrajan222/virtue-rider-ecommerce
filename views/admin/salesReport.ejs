<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report - Admin</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-900">
    <%- include('../partials/sidebar') %>

    <div class="p-2 sm:ml-64">
        <header class="flex items-center justify-between mb-8 p-4 lg:p-8 border-b border-gray-800">
            <h1 class="text-2xl font-semibold text-gray-200">Sales Report</h1>
            
            <!-- Download Options -->
            <div class="flex gap-4">
                <button onclick="downloadReport('excel')" 
                        class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
                    <i class="material-icons align-middle">description</i>
                    Excel
                </button>
                <button onclick="downloadReport('pdf')" 
                        class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors">
                    <i class="material-icons align-middle">picture_as_pdf</i>
                    PDF
                </button>
            </div>
        </header>

        <!-- Filter Section -->
        <div class="mb-6 bg-gray-800 p-6 rounded-lg">
            <div class="flex flex-wrap gap-4 mb-4">
                <button onclick="setPeriod('daily')" 
                        class="px-4 py-2 rounded-lg transition-colors <%= period === 'daily' ? 'bg-orange-500 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600' %>">
                    <i class="material-icons align-middle text-sm">today</i>
                    Daily
                </button>
                <!-- Add weekly, monthly, yearly buttons similarly -->
            </div>
            
            <div class="flex flex-wrap gap-4 items-end">
                <div>
                    <label class="block text-sm text-gray-400 mb-1">Start Date</label>
                    <input type="date" id="startDate" 
                           class="px-4 py-2 bg-gray-700 text-gray-200 rounded-lg focus:ring-2 focus:ring-orange-500 border-none"
                           value="<%= dateRange.start?.toISOString().split('T')[0] %>">
                </div>
                <div>
                    <label class="block text-sm text-gray-400 mb-1">End Date</label>
                    <input type="date" id="endDate"
                           class="px-4 py-2 bg-gray-700 text-gray-200 rounded-lg focus:ring-2 focus:ring-orange-500 border-none"
                           value="<%= dateRange.end?.toISOString().split('T')[0] %>">
                </div>
                <button onclick="applyDateFilter()" 
                        class="px-6 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors">
                    <i class="material-icons align-middle">filter_list</i>
                    Apply Filter
                </button>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <!-- Overall Sales Count -->
            <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-gray-400">Overall Sales Count</h3>
                    <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl">shopping_cart</i>
                </div>
                <div class="flex items-baseline">
                    <p class="text-3xl font-bold text-gray-200">
                        <%= salesData.reduce((sum, order) => sum + order.items.reduce((itemSum, item) => itemSum + item.quantity, 0), 0) %>
                    </p>
                    <p class="ml-2 text-sm text-gray-400">items</p>
                </div>
            </div>

            <!-- Overall Order Amount -->
            <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-gray-400">Overall Order Amount</h3>
                    <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl">payments</i>
                </div>
                <div class="flex items-baseline">
                    <p class="text-3xl font-bold text-gray-200">₹<%= salesData.reduce((sum, order) => sum + order.subtotal, 0).toLocaleString() %></p>
                </div>
            </div>

            <!-- Overall Discount -->
            <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-gray-400">Overall Discount</h3>
                    <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl">discount</i>
                </div>
                <div class="flex items-baseline">
                    <p class="text-3xl font-bold text-gray-200">₹<%= salesData.reduce((sum, order) => sum + (order.couponDiscount + order.totalOfferDiscount), 0).toLocaleString() %></p>
                    <p class="ml-2 text-sm text-gray-400">(Coupon + Offer)</p>
                </div>
            </div>
        </div>

        <!-- Add sorting controls -->
        <div class="flex justify-end mb-4">
            <select id="sortField" onchange="updateSort()" 
                    class="px-4 py-2 bg-gray-700 text-gray-200 rounded-lg mr-2">
                <option value="date" <%= currentSort === 'date' ? 'selected' : '' %>>Date</option>
                <option value="amount" <%= currentSort === 'amount' ? 'selected' : '' %>>Amount</option>
            </select>
            <button onclick="toggleSortOrder()" 
                    class="px-4 py-2 bg-gray-700 text-gray-200 rounded-lg">
                <i class="material-icons align-middle">
                    <%= currentOrder === 'desc' ? 'arrow_downward' : 'arrow_upward' %>
                </i>
            </button>
        </div>

        <!-- Sales Table -->
        <div class="bg-gray-800 rounded-lg shadow-lg p-6">
            <div class="flex items-center gap-3 mb-4">
                <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl">receipt_long</i>
                <h2 class="text-xl font-semibold text-gray-200">Sales Details</h2>
            </div>
            <div class="overflow-x-auto">
                <table class="w-full text-left">
                    <thead class="bg-gray-700">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Order ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Date</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">User ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase" colspan="3">Items Details</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Total Amount</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Coupon Discount</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Offer Discount</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Net Amount</th>
                        </tr>
                        <tr class="bg-gray-700/50">
                            <th class="px-6 py-2" colspan="3"></th>
                            <th class="px-6 py-2 text-left text-xs font-medium text-gray-400">Product Name</th>
                            <th class="px-6 py-2 text-left text-xs font-medium text-gray-400">Qty</th>
                            <th class="px-6 py-2 text-left text-xs font-medium text-gray-400">Price</th>
                            <th class="px-6 py-2" colspan="4"></th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-700">
                        <% if (salesData && salesData.length > 0) { %>
                            <% salesData.forEach(order => { %>
                                <tr class="hover:bg-gray-700">
                                    <td class="px-6 py-4 whitespace-nowrap text-gray-300"><%= order.orderId %></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-gray-300">
                                        <%= new Date(order.date).toLocaleDateString('en-US', { 
                                            day: 'numeric', 
                                            month: 'short', 
                                            year: 'numeric' 
                                        }) %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-gray-300"><%= order.userId %></td>
                                    <td class="px-6 py-4 text-gray-300" colspan="3">
                                        <div class="grid grid-cols-3 gap-4">
                                            <% order.items.forEach(item => { %>
                                                <div class="text-gray-300"><%= item.name %></div>
                                                <div class="text-center text-gray-300"><%= item.quantity %></div>
                                                <div class="text-right text-gray-300">₹<%= item.price %></div>
                                            <% }); %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-gray-300">₹<%= order.subtotal %></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-green-500">
                                        <% if (order.couponDiscount > 0) { %>
                                            -₹<%= order.couponDiscount %>
                                        <% } else { %>
                                            -
                                        <% } %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-green-500">
                                        <% if (order.totalOfferDiscount > 0) { %>
                                            -₹<%= order.totalOfferDiscount %>
                                        <% } else { %>
                                            -
                                        <% } %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-gray-300">₹<%= order.netAmount %></td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="10" class="px-6 py-4 text-center text-gray-400">No sales data found</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
                <div class="mt-6 flex justify-center gap-2">
                    <% if (hasPrevPage) { %>
                        <a href="?page=<%= currentPage - 1 %>" 
                           class="px-4 py-2 bg-gray-700 text-gray-200 rounded hover:bg-gray-600 transition-colors">
                            Previous
                        </a>
                    <% } %>
                    
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <a href="?page=<%= i %>" 
                           class="px-4 py-2 rounded <%= currentPage === i ? 'bg-orange-500 text-white' : 'bg-gray-700 text-gray-200 hover:bg-gray-600' %> transition-colors">
                            <%= i %>
                        </a>
                    <% } %>
                    
                    <% if (hasNextPage) { %>
                        <a href="?page=<%= currentPage + 1 %>" 
                           class="px-4 py-2 bg-gray-700 text-gray-200 rounded hover:bg-gray-600 transition-colors">
                            Next
                        </a>
                    <% } %>
                </div>
            <% } %>
        </div>
    </div>

    <script>
        function setPeriod(period) {
            window.location.href = `/admin/sales-report?period=${period}`;
        }

        function applyDateFilter() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            if (!startDate || !endDate) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Missing Dates',
                    text: 'Please select both start and end dates'
                });
                return;
            }
            window.location.href = `/admin/sales-report?startDate=${startDate}&endDate=${endDate}`;
        }

        function updateSort() {
            const sort = document.getElementById('sortField').value;
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('sort', sort);
            window.location.href = `?${urlParams.toString()}`;
        }

        function toggleSortOrder() {
            const urlParams = new URLSearchParams(window.location.search);
            const currentOrder = urlParams.get('order') || 'desc';
            urlParams.set('order', currentOrder === 'desc' ? 'asc' : 'desc');
            window.location.href = `?${urlParams.toString()}`;
        }

        async function downloadReport(type) {
            try {
                const response = await fetch(`/admin/sales-report/download/${type}`, {
                    method: 'GET'
                });
                
                if (!response.ok) throw new Error('Download failed');
                
                const blob = await response.blob();
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `sales-report.${type}`;
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
                a.remove();
            } catch (error) {
                console.error('Download error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Download Failed',
                    text: 'Failed to download the report'
                });
            }
        }
    </script>
</body>
</html> 