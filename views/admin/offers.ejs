<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Offers - Admin</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="mybg-green">
    <%- include('../partials/sidebar') %>

    <div class="p-2 sm:ml-64">
        <header class="flex items-center justify-between mb-8 p-4 lg:p-8 border-b border-gray-700">
            <button id="toggleSidebar" class="text-white lg:hidden"></button>
            <h1 class="text-2xl font-semibold text-gray-200">Offer Management</h1>
        </header>
            <div class="flex justify-between items-center mb-6 p-4">
                <button onclick="openOfferModal()" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded">
                    Add New Offer
                </button>
            </div>

            <!-- Table container -->
            <div class="bg-zinc-700 rounded-lg shadow-md overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-600">
                        <thead class="bg-zinc-800">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Offer Name</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Type</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Discount</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Duration</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-600">
                            <% if (offers && offers.length > 0) { %>
                                <% offers.forEach(offer => { %>
                                    <% 
                                    const now = new Date();
                                    const endDate = new Date(offer.endDate);
                                    const isExpired = endDate < now;
                                    %>
                                    <tr class="hover:bg-zinc-600 relative">
                                        <td class="px-6 py-4">
                                            <div class="flex items-center">
                                                <div class="text-sm text-gray-200"><%= offer.name %></div>
                                                <% if (isExpired) { %>
                                                    <span class="ml-2 px-2 py-1 text-xs font-medium bg-red-500/10 text-red-400 rounded-full">
                                                        Expired
                                                    </span>
                                                <% } else if (now < new Date(offer.startDate)) { %>
                                                    <span class="ml-2 px-2 py-1 text-xs font-medium bg-yellow-500/10 text-yellow-400 rounded-full">
                                                        Scheduled
                                                    </span>
                                                <% } else { %>
                                                    <span class="ml-2 px-2 py-1 text-xs font-medium bg-green-500/10 text-green-400 rounded-full">
                                                        Active
                                                    </span>
                                                <% } %>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4">
                                            <div class="text-sm text-gray-200">
                                                <%= offer.categoryId ? 'Category' : 'Product' %>
                                            </div>
                                            <div class="text-xs text-gray-400">
                                                <% if (offer.categoryId) { %>
                                                    <%= offer.categoryId.name %>
                                                <% } else { %>
                                                    <%= offer.productIds.length %> products
                                                <% } %>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4">
                                            <div class="text-sm text-gray-200">
                                                <span class="font-medium"><%= offer.discount %>%</span>
                                                <span class="text-gray-400">off</span>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4">
                                            <div class="text-sm text-gray-200">
                                                <%= new Date(offer.startDate).toLocaleString('en-IN', {
                                                    timeZone: 'Asia/Kolkata',
                                                    year: 'numeric',
                                                    month: '2-digit',
                                                    day: '2-digit'
                                                }) %> - 
                                                <%= new Date(offer.endDate).toLocaleString('en-IN', {
                                                    timeZone: 'Asia/Kolkata',
                                                    year: 'numeric',
                                                    month: '2-digit',
                                                    day: '2-digit'
                                                }) %>
                                            </div>
                                            <div class="text-xs text-gray-400">
                                                <%= new Date(offer.startDate).toLocaleString('en-IN', {
                                                    timeZone: 'Asia/Kolkata',
                                                    hour: '2-digit',
                                                    minute: '2-digit',
                                                    hour12: true
                                                }) %> - 
                                                <%= new Date(offer.endDate).toLocaleString('en-IN', {
                                                    timeZone: 'Asia/Kolkata',
                                                    hour: '2-digit',
                                                    minute: '2-digit',
                                                    hour12: true
                                                }) %>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4">
                                            <div class="flex space-x-2">
                                                <button onclick="editOffer(this)" 
                                                        data-offer="<%= encodeURIComponent(JSON.stringify(offer)) %>"
                                                        class="px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700">
                                                    Edit
                                                </button>
                                                <button onclick="deleteOffer('<%= offer._id %>')"
                                                        class="px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700">
                                                    Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="px-6 py-8 text-center text-gray-400">
                                        <div class="flex flex-col items-center">
                                            <i class="fas fa-tag text-4xl mb-3"></i>
                                            <p>No offers found</p>
                                            <p class="text-sm mt-1">Create your first offer by clicking the Add New button</p>
                                        </div>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Modal -->
            <div id="offerModal" class="hidden fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50">
                <div class="bg-zinc-800 rounded-lg shadow-xl w-[480px] max-w-full">
                    <!-- Modal Header -->
                    <div class="flex items-center justify-between p-4 border-b border-zinc-700">
                        <h3 class="text-lg font-medium text-white" id="modalTitle">Add New Offer</h3>
                        <button onclick="closeOfferModal()" class="text-gray-400 hover:text-white">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>

                    <!-- Modal Body -->
                    <div class="p-4 space-y-4">
                        <form id="offerForm" onsubmit="handleOfferSubmit(event)" class="space-y-4">
                            <input type="hidden" id="offerId" value="">
                            
                            <!-- Offer Name -->
                            <div>
                                <label for="offerName" class="block text-sm text-gray-300 mb-1">Offer Name</label>
                                <input type="text" id="offerName" placeholder="Enter offer name"
                                       class="w-full px-3 py-2 bg-zinc-700/50 border border-zinc-600 text-white rounded-lg 
                                              focus:ring-1 focus:ring-blue-500 focus:border-blue-500 placeholder-gray-400">
                            </div>

                            <!-- Offer Type -->
                            <div>
                                <label for="offerType" class="block text-sm text-gray-300 mb-1">Offer Type</label>
                                <select id="offerType" onchange="handleTypeChange()"
                                        class="w-full px-3 py-2 bg-zinc-700/50 border border-zinc-600 text-white rounded-lg 
                                               focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="">Select Type</option>
                                    <option value="category">Category</option>
                                    <option value="product">Products</option>
                                </select>
                            </div>

                            <!-- Selection Area -->
                            <div id="selectionDiv" class="hidden">
                                <label class="block text-sm text-gray-300 mb-1">
                                    Select <span id="selectionType">Items</span>
                                </label>

                                <!-- Category Selection -->
                                <div id="categorySelection" class="hidden">
                                    <select id="categorySelect" 
                                            class="w-full px-3 py-2 bg-zinc-700/50 border border-zinc-600 text-white rounded-lg 
                                                   focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                                        <option value="">Select Category</option>
                                    </select>
                                </div>

                                <!-- Product Selection -->
                                <div id="productSelection" class="hidden space-y-2">
                                    <input type="text" id="productSearch" placeholder="Search products..." 
                                           class="w-full px-3 py-2 bg-zinc-700/50 border border-zinc-600 text-white rounded-lg 
                                                  focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                                    
                                    <div class="flex justify-between items-center text-sm">
                                        <button type="button" onclick="toggleAllProducts()"
                                                class="text-blue-400 hover:text-blue-300">Toggle All</button>
                                        <span class="text-gray-400">Selected: <span id="selectedCount">0</span></span>
                                    </div>
                                    
                                    <div id="productList" class="max-h-32 overflow-y-auto bg-zinc-700/50 rounded-lg border border-zinc-600">
                                        <!-- Products will be populated here -->
                                    </div>
                                </div>
                            </div>

                            <!-- Discount -->
                            <div>
                                <label for="discount" class="block text-sm text-gray-300 mb-1">Discount (%)</label>
                                <input type="number" id="discount" placeholder="Enter discount percentage"
                                       class="w-full px-3 py-2 bg-zinc-700/50 border border-zinc-600 text-white rounded-lg 
                                              focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                            </div>

                            <!-- Date Range -->
                            <div class="grid grid-cols-2 gap-3">
                                <div>
                                    <label for="startDate" class="block text-sm text-gray-300 mb-1">Start Date</label>
                                    <input type="datetime-local" id="startDate" 
                                           class="w-full px-3 py-2 bg-zinc-700/50 border border-zinc-600 text-white rounded-lg 
                                                  focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                                </div>
                                <div>
                                    <label for="endDate" class="block text-sm text-gray-300 mb-1">End Date</label>
                                    <input type="datetime-local" id="endDate" 
                                           class="w-full px-3 py-2 bg-zinc-700/50 border border-zinc-600 text-white rounded-lg 
                                                  focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                                </div>
                            </div>

                            <!-- Modal Footer -->
                            <div class="flex justify-end space-x-2 pt-4 border-t border-zinc-700">
                                <button type="button" onclick="closeOfferModal()"
                                        class="px-4 py-2 text-sm bg-zinc-700 text-white rounded-lg hover:bg-zinc-600">
                                    Cancel
                                </button>
                                <button type="submit" id="submitButton"
                                        class="px-4 py-2 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-500">
                                    Save Offer
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let isSubmitting = false;
        const products = <%- JSON.stringify(products) %>;
        const categories = <%- JSON.stringify(categories) %>;

        function handleTypeChange() {
            const type = document.getElementById('offerType').value;
            const selectionDiv = document.getElementById('selectionDiv');
            const categorySelection = document.getElementById('categorySelection');
            const productSelection = document.getElementById('productSelection');
            const selectionType = document.getElementById('selectionType');
            
            if (!type) {
                selectionDiv.classList.add('hidden');
                return;
            }

            selectionDiv.classList.remove('hidden');
            selectionType.textContent = type === 'category' ? 'Category' : 'Products';
            
            if (type === 'category') {
                categorySelection.classList.remove('hidden');
                productSelection.classList.add('hidden');
                populateCategories();
            } else {
                categorySelection.classList.add('hidden');
                productSelection.classList.remove('hidden');
                populateProducts();
            }
        }

        function populateCategories() {
            const select = document.getElementById('categorySelect');
            select.innerHTML = '<option value="">Select Category</option>';
            
            categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category._id;
                option.textContent = category.name;
                select.appendChild(option);
            });
        }

        function populateProducts() {
            const productList = document.getElementById('productList');
            productList.innerHTML = '';
            
            products.forEach(product => {
                const div = document.createElement('div');
                div.className = 'flex items-center p-2 hover:bg-zinc-600';
                div.innerHTML = `
                    <input type="checkbox" 
                           id="product_${product._id}" 
                           value="${product._id}"
                           class="mr-2 h-4 w-4 text-blue-600 focus:ring-blue-500 bg-zinc-600 border-gray-500">
                    <label for="product_${product._id}" class="flex-1 cursor-pointer text-gray-200">
                        <div class="font-medium">${product.productName}</div>
                        <div class="text-sm text-gray-400">${product.brand || ''}</div>
                    </label>
                `;
                productList.appendChild(div);
            });

            // Initialize search functionality
            document.getElementById('productSearch').addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase();
                const items = productList.getElementsByTagName('div');
                
                Array.from(items).forEach(item => {
                    const productName = item.querySelector('label').textContent.toLowerCase();
                    item.style.display = productName.includes(searchTerm) ? '' : 'none';
                });
            });
        }

        function updateSelectedCount() {
            const selectedCount = document.querySelectorAll('#productList input[type="checkbox"]:checked').length;
            document.getElementById('selectedCount').textContent = selectedCount;
        }

        function toggleAllProducts() {
            const checkboxes = document.querySelectorAll('#productList input[type="checkbox"]');
            const allChecked = Array.from(checkboxes).every(cb => cb.checked);
            
            checkboxes.forEach(cb => {
                cb.checked = !allChecked;
            });
            updateSelectedCount();
        }

        function validateOfferName(name) {
            // Remove leading/trailing spaces and capitalize
            const trimmedName = name.trim().toUpperCase();
            
            // Check length (3-10 characters)
            if (trimmedName.length < 3 || trimmedName.length > 10) {
                throw new Error('Offer name must be between 3 and 10 characters');
            }
            
            // Check for multiple spaces
            if (/\s{2,}/.test(name)) {
                throw new Error('Offer name cannot contain multiple spaces');
            }
            
            return trimmedName;
        }

        // Add real-time validation for the name input
        document.getElementById('offerName').addEventListener('input', function(e) {
            const input = e.target;
            const errorSpan = document.getElementById('nameError') || 
                             (() => {
                                 const span = document.createElement('span');
                                 span.id = 'nameError';
                                 span.className = 'text-red-500 text-xs mt-1';
                                 input.parentNode.appendChild(span);
                                 return span;
                             })();
            
            try {
                const validatedName = validateOfferName(input.value);
                errorSpan.textContent = '';
                input.classList.remove('border-red-500');
                input.classList.add('border-gray-300');
                input.value = validatedName; // Auto-capitalize the input
            } catch (error) {
                errorSpan.textContent = error.message;
                input.classList.remove('border-gray-300');
                input.classList.add('border-red-500');
            }
        });

        function validateDiscount(discount) {
            const numDiscount = parseInt(discount);
            
            if (isNaN(numDiscount)) {
                throw new Error('Please enter a valid discount percentage');
            }
            
            if (numDiscount < 1 || numDiscount > 90) {
                throw new Error('Discount must be between 1% and 90%');
            }
            
            return numDiscount;
        }

        // Add real-time validation for the discount input
        document.getElementById('discount').addEventListener('input', function(e) {
            const input = e.target;
            const errorSpan = document.getElementById('discountError') || 
                             (() => {
                                 const span = document.createElement('span');
                                 span.id = 'discountError';
                                 span.className = 'text-red-500 text-xs mt-1';
                                 input.parentNode.appendChild(span);
                                 return span;
                             })();
            
            try {
                const validatedDiscount = validateDiscount(input.value);
                errorSpan.textContent = '';
                input.classList.remove('border-red-500');
                input.classList.add('border-gray-300');
            } catch (error) {
                errorSpan.textContent = error.message;
                input.classList.remove('border-gray-300');
                input.classList.add('border-red-500');
            }
        });

        async function handleOfferSubmit(event) {
            event.preventDefault();
            if (isSubmitting) return;

            try {
                // Validate offer name
                const offerNameInput = document.getElementById('offerName');
                const validatedName = validateOfferName(offerNameInput.value);
                offerNameInput.value = validatedName;

                // Validate discount
                const discountInput = document.getElementById('discount');
                const validatedDiscount = validateDiscount(discountInput.value);
                discountInput.value = validatedDiscount;

                const type = document.getElementById('offerType').value;
                let itemIds = [];

                if (type === 'category') {
                    const categoryId = document.getElementById('categorySelect').value;
                    if (!categoryId) {
                        throw new Error('Please select a category');
                    }
                    itemIds = [categoryId];
                } else {
                    const selectedProducts = document.querySelectorAll('#productList input[type="checkbox"]:checked');
                    itemIds = Array.from(selectedProducts).map(cb => cb.value);
                    if (itemIds.length === 0) {
                        throw new Error('Please select at least one product');
                    }
                }

                isSubmitting = true;
                const submitButton = document.getElementById('submitButton');
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';

                const offerId = document.getElementById('offerId').value;
                const formData = {
                    name: validatedName,
                    type,
                    itemIds,
                    discount: validatedDiscount,
                    startDate: document.getElementById('startDate').value,
                    endDate: document.getElementById('endDate').value
                };

                const url = offerId ? `/admin/offers/${offerId}` : '/admin/offers';
                const method = offerId ? 'PUT' : 'POST';

                const response = await fetch(url, {
                    method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message
                    }).then(() => window.location.reload());
                } else {
                    throw new Error(data.message);
                }

            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message
                });
            } finally {
                isSubmitting = false;
                const submitButton = document.getElementById('submitButton');
                submitButton.disabled = false;
                submitButton.innerHTML = 'Save Offer';
            }
        }

        function openOfferModal() {
            document.getElementById('modalTitle').textContent = 'Add New Offer';
            document.getElementById('offerForm').reset();
            document.getElementById('offerId').value = '';
            document.getElementById('selectionDiv').classList.add('hidden');
            document.getElementById('offerModal').classList.remove('hidden');
        }

        function closeOfferModal() {
            document.getElementById('offerModal').classList.add('hidden');
            document.getElementById('offerForm').reset();
            document.getElementById('selectionDiv').classList.add('hidden');
        }

        function editOffer(button) {
            try {
                const offer = JSON.parse(decodeURIComponent(button.dataset.offer));

                document.getElementById('modalTitle').textContent = 'Edit Offer';
                document.getElementById('offerId').value = offer._id;
                document.getElementById('offerName').value = offer.name;
                
                // Set offer type
                const type = offer.categoryId ? 'category' : 'product';
                document.getElementById('offerType').value = type;
                
                // Format dates with IST timezone
                const startDate = new Date(offer.startDate);
                const endDate = new Date(offer.endDate);

                // Convert to IST and format for datetime-local input
                const formatToIST = (date) => {
                    const istDate = new Date(date.toLocaleString('en-US', { timeZone: 'Asia/Kolkata' }));
                    return istDate.toLocaleString('sv-SE', { 
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit'
                    }).replace(' ', 'T');
                };

                document.getElementById('startDate').value = formatToIST(startDate);
                document.getElementById('endDate').value = formatToIST(endDate);
                
                // Setup UI based on type
                handleTypeChange();

                // Wait for UI to update before setting values
                setTimeout(() => {
                    if (type === 'category') {
                        const categoryId = offer.categoryId._id || offer.categoryId;
                        document.getElementById('categorySelect').value = categoryId;
                    } else {
                        // Clear existing selections
                        document.querySelectorAll('#productList input[type="checkbox"]').forEach(cb => {
                            cb.checked = false;
                        });

                        // Set product selections
                        offer.productIds.forEach(product => {
                            const productId = product._id || product;
                            const checkbox = document.querySelector(`#product_${productId}`);
                            if (checkbox) {
                                checkbox.checked = true;
                            }
                        });
                        updateSelectedCount();
                    }

                    // Set discount
                    document.getElementById('discount').value = offer.discount;
                }, 100);

                // Show modal
                document.getElementById('offerModal').classList.remove('hidden');
            } catch (error) {
                console.error('Edit offer error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to load offer details'
                });
            }
        }

        function deleteOffer(offerId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#EF4444',
                cancelButtonColor: '#6B7280',
                confirmButtonText: 'Yes, delete it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/offers/${offerId}`, {
                            method: 'DELETE'
                        });
                        
                        const data = await response.json();
                        
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: data.message
                            }).then(() => window.location.reload());
                        } else {
                            throw new Error(data.message);
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: error.message
                        });
                    }
                }
            });
        }
    </script>
</body>
</html> 