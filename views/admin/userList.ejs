<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Users Management - Virtue Rider</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>
  <body class="bg-gray-900">
    <div id="loadingSpinner" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500"></div>
    </div>

    <!-- Sidebar -->
    <%- include("../partials/sidebar") %>

    <!-- Main Content -->
    <div class="p-2 sm:ml-64">
      <!-- Header -->
      <header class="flex items-center justify-between mb-8 p-4 lg:p-8 border-b border-gray-800">
        <h1 class="text-2xl font-semibold text-gray-200">User Management</h1>
        
        <!-- Search Bar -->
        <div class="flex items-center space-x-4">
          <div class="relative">
            <input type="text" 
                   id="searchInput" 
                   placeholder="Search users..." 
                   class="bg-gray-800 text-gray-200 px-4 py-2 rounded-lg border border-gray-700 focus:outline-none focus:border-orange-500"
            >
            <i class="material-icons absolute right-3 top-2 text-gray-400">search</i>
          </div>
        </div>
      </header>

      <!-- Users Table -->
      <div class="bg-gray-800 rounded-lg shadow-xl overflow-hidden mx-4 border border-gray-700">
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-700 text-gray-200">
            <thead class="bg-gray-900">
             <tr class="border-b border-gray-700">
                <th class="py-3 px-4 text-gray-200">S.No</th>
                <th class="py-3 px-4 text-gray-200">Name</th>
                <th class="py-3 px-4 text-gray-200">Email</th>
                <th class="py-3 px-4 text-gray-200">Status</th>
                <th class="py-3 px-4 text-gray-200">Action</th>
              </tr>
            </thead>
            <tbody class="text-gray-200">
              <% if (userList.length > 0) { %>
                <% userList.forEach((user, index) => { %>
                  <tr class="border-b border-gray-700 hover:bg-zinc-700 transition-colors">
                    <td class="py-3 px-4"><%= index + 1 %></td>
                    <td class="py-3 px-4"><%= user.firstName %> <%= user.lastName %></td>
                    <td class="py-3 px-4"><%= user.email %></td>
                    <td class="py-3 px-4">
                      <span class="px-2 py-1 rounded-full text-sm <%= user.isVerified ? 'bg-green-500/20 text-green-500' : 'bg-red-500/20 text-red-500' %>">
                        <%= user.isVerified ? 'Verified' : 'Not Verified' %>
                      </span>
                    </td>
                    <td class="py-3 px-4">
                      <button 
                        onclick="toggleUserStatus('<%= user._id %>', <%= user.isBlocked %>)"
                        class="text-white py-1 px-3 rounded transition-colors
                        <%= user.isBlocked ? 'bg-orange-500 hover:bg-orange-600' : 'bg-green-500 hover:bg-green-600' %>">
                        <%= user.isBlocked ? 'Unblock' : 'Block' %>
                      </button>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="6" class="py-8 text-center text-gray-400">
                    <div class="flex flex-col items-center">
                      <i class="fas fa-users text-4xl mb-2"></i>
                      <p>No users found</p>
                    </div>
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="bg-gray-900 px-4 py-3 flex items-center justify-between border-t border-gray-700 sm:px-6">
          <div class="flex-1 flex justify-between sm:hidden">
            <button onclick="changePage(<%= currentPage - 1 %>)" 
                    <%= currentPage === 1 ? 'disabled' : '' %>
                    class="relative inline-flex items-center px-4 py-2 text-sm font-medium rounded-md text-gray-400 bg-gray-800 hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed">
              Previous
            </button>
            <button onclick="changePage(<%= currentPage + 1 %>)"
                    <%= currentPage === totalPages ? 'disabled' : '' %>
                    class="ml-3 relative inline-flex items-center px-4 py-2 text-sm font-medium rounded-md text-gray-400 bg-gray-800 hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed">
              Next
            </button>
          </div>
          <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
              <p class="text-sm text-gray-400">
                Showing <span class="font-medium"><%= (currentPage - 1) * limit + 1 %></span> to 
                <span class="font-medium"><%= Math.min(currentPage * limit, totalUsers) %></span> of 
                <span class="font-medium"><%= totalUsers %></span> users
              </p>
            </div>
            <div>
              <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                <% for(let i = 1; i <= totalPages; i++) { %>
                  <button onclick="changePage(<%= i %>)"
                          class="relative inline-flex items-center px-4 py-2 text-sm font-medium 
                                 <%= currentPage === i ? 'bg-orange-500 text-white' : 'text-gray-400 bg-gray-800 hover:bg-gray-700' %>
                                 <%= i === 1 ? 'rounded-l-md' : '' %>
                                 <%= i === totalPages ? 'rounded-r-md' : '' %>">
                    <%= i %>
                  </button>
                <% } %>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
    const utils = {
      toggleLoading: (show) => {
        document.getElementById('loadingSpinner').classList.toggle('hidden', !show);
      },

      showAlert: async ({ title, text, icon = 'success', showCancelButton = false }) => {
        return Swal.fire({
          title,
          text,
          icon,
          showCancelButton,
          confirmButtonColor: '#10B981',
          cancelButtonColor: '#6B7280',
          confirmButtonText: showCancelButton ? 'Yes, proceed' : 'OK',
          cancelButtonText: 'Cancel'
        });
      }
    };

    async function toggleUserStatus(userId, isBlocked) {
      try {
        utils.toggleLoading(true);

        const result = await utils.showAlert({
          title: `${isBlocked ? 'Unblock' : 'Block'} User`,
          text: `Are you sure you want to ${isBlocked ? 'unblock' : 'block'} this user?`,
          icon: 'warning',
          showCancelButton: true
        });

        if (!result.isConfirmed) {
          utils.toggleLoading(false);
          return;
        }

        const response = await fetch(`/admin/users/${userId}/toggle-status`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();

        if (data.success) {
          // Reload the page to show updated status
          window.location.reload();
        } else {
          throw new Error(data.message || 'Failed to update user status');
        }
      } catch (error) {
        console.error('Error:', error);
        await utils.showAlert({
          title: 'Error!',
          text: error.message || 'Failed to update user status',
          icon: 'error'
        });
      } finally {
        utils.toggleLoading(false);
      }
    }

    function changePage(page) {
      window.location.href = `/admin/users?page=${page}`;
    }

    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const rows = document.querySelectorAll('tbody tr');

      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
      });
    });
    </script>
  </body>
</html>
