<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Users Management - Virtue Rider</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>
  <body class="bg-gray-900">
    <div id="loadingSpinner" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500"></div>
    </div>

    <!-- Sidebar -->
    <%- include("../partials/sidebar") %>

    <!-- Main Content -->
    <div class="p-2 sm:ml-64">
      <!-- Header -->
      <header class="flex items-center justify-between mb-8 p-4 lg:p-8 border-b border-gray-800">
        <h1 class="text-2xl font-semibold text-gray-200">User Management</h1>
        
        <!-- Search Bar -->
        <div class="flex items-center space-x-4">
          <div class="relative">
            <input type="text" 
                   id="searchInput" 
                   placeholder="Search users..." 
                   class="bg-gray-800 text-gray-200 px-4 py-2 rounded-lg border border-gray-700 focus:outline-none focus:border-orange-500"
            >
            <i class="material-icons absolute right-3 top-2 text-gray-400">search</i>
          </div>
        </div>
      </header>

      <!-- Users Table -->
      <div class="bg-gray-800 rounded-lg shadow-xl overflow-hidden mx-4 border border-gray-700">
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-700">
            <thead class="bg-gray-900">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase">User</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase">Email</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase">Status</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase">Actions</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-700">
              <% users.forEach(user => { %>
                <tr class="hover:bg-gray-700 transition-colors">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="h-10 w-10 flex-shrink-0">
                        <div class="h-10 w-10 rounded-full bg-orange-500 flex items-center justify-center">
                          <span class="text-white font-semibold">
                            <%= (user.firstName || '')[0]?.toUpperCase() %>
                          </span>
                        </div>
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-200">
                          <%= `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' %>
                        </div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="text-sm text-gray-200"><%= user.email %></div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                      <%= user.isBlocked ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800' %>">
                      <%= user.isBlocked ? 'Inactive' : 'Active' %>
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <button onclick="toggleUserStatus('<%= user._id %>', <%= user.isBlocked %>)"
                            class="<%= user.isBlocked ? 'text-green-500 hover:text-green-400' : 'text-orange-500 hover:text-orange-400' %> transition-colors">
                      <%= user.isBlocked ? 'Unblock' : 'Block' %>
                    </button>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="bg-gray-900 px-4 py-3 flex items-center justify-between border-t border-gray-700 sm:px-6">
          <div class="flex-1 flex justify-between sm:hidden">
            <button onclick="changePage(<%= currentPage - 1 %>)" 
                    <%= currentPage === 1 ? 'disabled' : '' %>
                    class="relative inline-flex items-center px-4 py-2 text-sm font-medium rounded-md text-gray-400 bg-gray-800 hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed">
              Previous
            </button>
            <button onclick="changePage(<%= currentPage + 1 %>)"
                    <%= currentPage === totalPages ? 'disabled' : '' %>
                    class="ml-3 relative inline-flex items-center px-4 py-2 text-sm font-medium rounded-md text-gray-400 bg-gray-800 hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed">
              Next
            </button>
          </div>
          <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
              <p class="text-sm text-gray-400">
                Showing <span class="font-medium"><%= (currentPage - 1) * limit + 1 %></span> to 
                <span class="font-medium"><%= Math.min(currentPage * limit, totalUsers) %></span> of 
                <span class="font-medium"><%= totalUsers %></span> users
              </p>
            </div>
            <div>
              <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                <% for(let i = 1; i <= totalPages; i++) { %>
                  <button onclick="changePage(<%= i %>)"
                          class="relative inline-flex items-center px-4 py-2 text-sm font-medium 
                                 <%= currentPage === i ? 'bg-orange-500 text-white' : 'text-gray-400 bg-gray-800 hover:bg-gray-700' %>
                                 <%= i === 1 ? 'rounded-l-md' : '' %>
                                 <%= i === totalPages ? 'rounded-r-md' : '' %>">
                    <%= i %>
                  </button>
                <% } %>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
    const utils = {
      toggleLoading: (show) => {
        document.getElementById('loadingSpinner').classList.toggle('hidden', !show);
      },

      showAlert: async ({ title, text, icon = 'success', showCancelButton = false }) => {
        return Swal.fire({
          title,
          text,
          icon,
          showCancelButton,
          confirmButtonColor: '#10B981',
          cancelButtonColor: '#6B7280',
          confirmButtonText: showCancelButton ? 'Yes, proceed' : 'OK',
          cancelButtonText: 'Cancel'
        });
      }
    };

    async function toggleUserStatus(userId, currentStatus) {
      try {
        const action = currentStatus ? 'unblock' : 'block';
        const response = await fetch(`/admin/users/${userId}/${action}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const data = await response.json();

        if (data.success) {
          await utils.showAlert({
            title: 'Success!',
            text: `User ${action}ed successfully`,
            icon: 'success'
          });
          window.location.reload();
        } else {
          throw new Error(data.message || 'Failed to update user status');
        }
      } catch (error) {
        await utils.showAlert({
          title: 'Error!',
          text: error.message || 'Something went wrong',
          icon: 'error'
        });
      }
    }

    function changePage(page) {
      window.location.href = `/admin/users?page=${page}`;
    }

    document.getElementById('searchInput').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const rows = document.querySelectorAll('tbody tr');

      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
      });
    });
    </script>
  </body>
</html>
