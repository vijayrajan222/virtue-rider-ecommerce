<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Admin Dashboard for Virtue Rider" />
    <title>Dashboard - Virtue Rider</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  </head>

  <body class="bg-gray-900">
    <%- include("../partials/sidebar") %>

    <div class="p-2 sm:ml-64">
      <header class="flex items-center justify-between mb-8 p-4 lg:p-8 border-b border-gray-800">
        <h1 class="text-2xl font-semibold text-gray-200">Dashboard Overview</h1>
        <div class="text-gray-400"><%= data.currentDate %></div>
      </header>

      <!-- Statistics Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <!-- Total Users Card -->
        <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-gray-400">Total Users</h3>
            <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl group-hover:rotate-12 transition-transform">sports_motorsports</i>
          </div>
          <div class="flex items-baseline">
            <p class="text-3xl font-bold text-gray-200"><%= data.totalUsers || 0 %></p>
          </div>
        </div>

        <!-- Total Products Card -->
        <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-gray-400">Total Products</h3>
            <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl group-hover:rotate-12 transition-transform">two_wheeler</i>
          </div>
          <div class="flex items-baseline">
            <p class="text-3xl font-bold text-gray-200"><%= data.totalProducts || 0 %></p>
          </div>
        </div>

        <!-- Total Orders Card -->
        <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-gray-400">Total Orders</h3>
            <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl group-hover:rotate-12 transition-transform">delivery_dining</i>
          </div>
          <div class="flex items-baseline">
            <p class="text-3xl font-bold text-gray-200"><%= data.totalOrders || 0 %></p>
          </div>
        </div>

        <!-- Total Revenue Card -->
        <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-gray-400">Total Revenue</h3>
            <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl group-hover:rotate-12 transition-transform">trending_up</i>
          </div>
          <div class="flex items-baseline">
            <p class="text-3xl font-bold text-gray-200">₹<%= data.totalRevenue.toLocaleString() || 0 %></p>
          </div>
        </div>
      </div>

      <!-- Sales Chart -->
      <div class="bg-gray-800 rounded-lg shadow-lg p-6 mb-8">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
          <h2 class="text-xl font-semibold text-gray-200 mb-4 md:mb-0">Sales Overview</h2>
          
          <div class="flex flex-wrap gap-2">
            <form id="filterForm" action="/admin/dashboard" method="GET" class="flex flex-wrap gap-2">
              <div class="flex space-x-2">
                <button type="submit" name="period" value="weekly" 
                        class="px-3 py-1 <%= data.period === 'weekly' ? 'bg-orange-600' : 'bg-gray-700' %> text-gray-300 rounded-lg text-sm hover:bg-orange-500 transition-colors">
                  Weekly
                </button>
                <button type="submit" name="period" value="monthly" 
                        class="px-3 py-1 <%= data.period === 'monthly' ? 'bg-orange-600' : 'bg-gray-700' %> text-gray-300 rounded-lg text-sm hover:bg-orange-500 transition-colors">
                  Monthly
                </button>
                <button type="submit" name="period" value="yearly" 
                        class="px-3 py-1 <%= data.period === 'yearly' ? 'bg-orange-600' : 'bg-gray-700' %> text-gray-300 rounded-lg text-sm hover:bg-orange-500 transition-colors">
                  Yearly
                </button>
              </div>
              
              <div class="flex items-center space-x-2 mt-2 md:mt-0">
                <input type="text" id="dateRange" placeholder="Custom Date Range" 
                       class="px-3 py-1 bg-gray-700 text-gray-300 rounded-lg text-sm w-48">
                <input type="hidden" id="startDate" name="startDate">
                <input type="hidden" id="endDate" name="endDate">
                <button type="submit" name="period" value="custom" id="customDateBtn"
                        class="px-3 py-1 <%= data.period === 'custom' ? 'bg-orange-600' : 'bg-gray-700' %> text-gray-300 rounded-lg text-sm hover:bg-orange-500 transition-colors">
                  Apply
                </button>
              </div>
            </form>
          </div>
        </div>
        <div class="h-[400px]">
          <canvas id="salesChart"></canvas>
        </div>
      </div>

      <!-- Top Products, Categories, and Brands Grid -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
        <!-- Top Products -->
        <div class="bg-gray-800 rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold text-gray-200 mb-4">Top Products</h2>
          <div class="space-y-4">
            <% if (data.topProducts && data.topProducts.length > 0) { %>
              <% data.topProducts.forEach((product, index) => { %>
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-3">
                    <span class="text-gray-400">#<%= index + 1 %></span>
                    <span class="text-gray-200"><%= product.productDetails.name %></span>
                  </div>
                  <span class="text-gray-400"><%= product.totalSales %> sold</span>
                </div>
              <% }); %>
            <% } else { %>
              <p class="text-gray-400">No product data available</p>
            <% } %>
          </div>
        </div>

        <!-- Top Categories -->
        <div class="bg-gray-800 rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold text-gray-200 mb-4">Top Categories</h2>
          <div class="space-y-4">
            <% if (data.topCategories && data.topCategories.length > 0) { %>
              <% data.topCategories.forEach((category, index) => { %>
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-3">
                    <span class="text-gray-400">#<%= index + 1 %></span>
                    <span class="text-gray-200"><%= category.categoryName %></span>
                  </div>
                  <span class="text-gray-400"><%= category.totalSales %> sold</span>
                </div>
              <% }); %>
            <% } else { %>
              <p class="text-gray-400">No category data available</p>
            <% } %>
          </div>
        </div>

        <!-- Top Brands -->
        <div class="bg-gray-800 rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold text-gray-200 mb-4">Top Brands</h2>
          <div class="space-y-4">
            <% if (data.topBrands && data.topBrands.length > 0) { %>
              <% data.topBrands.forEach((brand, index) => { %>
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-3">
                    <span class="text-gray-400">#<%= index + 1 %></span>
                    <span class="text-gray-200"><%= brand._id %></span>
                  </div>
                  <span class="text-gray-400">₹<%= brand.revenue.toLocaleString() %></span>
                </div>
              <% }); %>
            <% } else { %>
              <p class="text-gray-400">No brand data available</p>
            <% } %>
          </div>
        </div>
      </div>

      <!-- Recent Orders Table -->
      <% if (data.recentOrders && data.recentOrders.length > 0) { %>
        <div class="bg-gray-800 rounded-lg shadow-lg p-6 mb-8">
          <div class="flex items-center gap-3 mb-4">
            <i class="material-icons text-orange-500 text-lg md:text-xl lg:text-2xl">delivery_dining</i>
            <h2 class="text-xl font-semibold text-gray-200">Recent Orders</h2>
          </div>
          <div class="overflow-x-auto">
            <table class="w-full text-left">
              <thead class="bg-gray-700 text-gray-200">
                <tr>
                  <th class="p-4">Order ID</th>
                  <th class="p-4">Customer</th>
                  <th class="p-4">Amount</th>
                  <th class="p-4">Status</th>
                  <th class="p-4">Date</th>
                </tr>
              </thead>
              <tbody>
                <% data.recentOrders.forEach(order => { %>
                  <tr class="border-b border-gray-700">
                    <td class="p-4 text-gray-300">#<%= order._id.toString().slice(-6) %></td>
                    <td class="p-4 text-gray-300">
                      <% if (order.user && order.shippingAddress.fullName) { %>
                        <%= order.shippingAddress.fullName %>
                      <% } else { %>
                        Guest User
                      <% } %>
                    </td>
                    <td class="p-4 text-gray-300">₹<%= order.totalAmount.toLocaleString() %></td>
                    <td class="p-4">
                      <span class="px-2 py-1 rounded-full text-xs 
                        <%= order.paymentStatus === 'completed' ? 'bg-green-900/30 text-green-400' : 
                          order.paymentStatus === 'pending' ? 'bg-yellow-900/30 text-yellow-400' : 
                          'bg-red-900/30 text-red-400' %>">
                        <%= order.paymentStatus %>
                      </span>
                    </td>
                    <td class="p-4 text-gray-300"><%= new Date(order.createdAt).toLocaleDateString() %></td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        </div>
      <% } %>
    </div>

    <script>
      // Initialize date picker
      flatpickr("#dateRange", {
        mode: "range",
        dateFormat: "Y-m-d",
        onChange: function(selectedDates, dateStr) {
          if (selectedDates.length === 2) {
            document.getElementById('startDate').value = selectedDates[0].toISOString().split('T')[0];
            document.getElementById('endDate').value = selectedDates[1].toISOString().split('T')[0];
          }
        }
      });

      // Initialize Sales Chart
      document.addEventListener('DOMContentLoaded', function() {
        // Check if Chart.js is loaded
        if (typeof Chart === 'undefined') {
          console.error('Chart.js is not loaded');
          document.getElementById('salesChart').innerHTML = 'Chart library not loaded';
          return;
        }

        // Check if canvas element exists
        const canvas = document.getElementById('salesChart');
        if (!canvas) {
          console.error('Canvas element not found');
          return;
        }

        const ctx = canvas.getContext('2d');
        
        // Get chart data from server
        const labels = <%- JSON.stringify(data.chartData.labels || []) %>;
        const revenueData = <%- JSON.stringify(data.chartData.revenues || []) %>;
        const orderData = <%- JSON.stringify(data.chartData.orders || []) %>;

        console.log('Chart data:', { labels, revenueData, orderData });

        // Create the bar chart
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [
              {
                label: 'Revenue (₹)',
                data: revenueData,
                backgroundColor: 'rgba(249, 115, 22, 0.7)',
                borderColor: '#f97316',
                borderWidth: 1,
                yAxisID: 'y'
              },
              {
                label: 'Orders',
                data: orderData,
                backgroundColor: 'rgba(59, 130, 246, 0.7)',
                borderColor: '#3b82f6',
                borderWidth: 1,
                yAxisID: 'y1'
              }
            ]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'top',
                labels: {
                  color: '#e5e7eb',
                  font: {
                    size: 12
                  }
                }
              },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    let label = context.dataset.label || '';
                    if (label) {
                      label += ': ';
                    }
                    if (context.datasetIndex === 0) {
                      label += '₹' + context.parsed.y.toLocaleString();
                    } else {
                      label += context.parsed.y;
                    }
                    return label;
                  }
                }
              }
            },
            scales: {
              x: {
                grid: {
                  color: 'rgba(255, 255, 255, 0.1)'
                },
                ticks: {
                  color: '#e5e7eb',
                  maxRotation: 45,
                  minRotation: 0
                }
              },
              y: {
                type: 'linear',
                display: true,
                position: 'left',
                beginAtZero: true,
                grid: {
                  color: 'rgba(255, 255, 255, 0.1)'
                },
                ticks: {
                  color: '#e5e7eb',
                  callback: function(value) {
                    return '₹' + value.toLocaleString();
                  }
                }
              },
              y1: {
                type: 'linear',
                display: true,
                position: 'right',
                beginAtZero: true,
                grid: {
                  drawOnChartArea: false
                },
                ticks: {
                  color: '#e5e7eb'
                }
              }
            }
          }
        });
      });
    </script>
  </body>
</html>