<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products - Virtue Rider</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-900">
    <%- include('../partials/sidebar') %>

    <div class="p-2 sm:ml-64">
        <header class="flex items-center justify-between mb-8 p-4 lg:p-8 border-b border-gray-800">
            <h1 class="text-2xl font-semibold text-gray-200">Product Management</h1>
            <div class="flex space-x-4">
                <div class="relative">
                    <input type="text" 
                           id="searchInput" 
                           placeholder="Search products..." 
                           class="bg-gray-800 text-gray-200 px-4 py-2 rounded-lg border border-gray-700 focus:outline-none focus:border-orange-500">
                    <i class="material-icons absolute right-3 top-2 text-gray-400">search</i>
                </div>
                <button onclick="openAddModal()" 
                        class="bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-lg transition-colors flex items-center">
                    <i class="material-icons mr-2">add</i>
                    Add Product
                </button>
            </div>
        </header>

        <!-- Products Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 p-4">
            <% products.forEach(product => { %>
                <div class="bg-gray-800 rounded-lg shadow-xl overflow-hidden border border-gray-700">
                    <div class="relative aspect-w-16 aspect-h-9">
                        <img src="<%= product.images[0] || '/images/placeholder.jpg' %>" 
                             alt="<%= product.name %>"
                             class="w-full h-48 object-cover">
                        <div class="absolute top-2 right-2 space-x-2">
                            <button onclick="editProduct('<%= product._id %>')"
                                    class="p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
                                <i class="material-icons text-sm">edit</i>
                            </button>
                            <button onclick="deleteProduct('<%= product._id %>')"
                                    class="p-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors">
                                <i class="material-icons text-sm">delete</i>
                            </button>
                        </div>
                    </div>
                    <div class="p-4">
                        <h3 class="text-lg font-semibold text-gray-200 mb-2"><%= product.name %></h3>
                        <p class="text-gray-400 text-sm mb-2"><%= product.description %></p>
                        <div class="flex justify-between items-center">
                            <div class="text-orange-500 font-bold">â‚¹<%= product.price %></div>
                            <span class="px-2 py-1 text-xs font-semibold rounded-full 
                                <%= product.stock > 0 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                                <%= product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
                            </span>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>

        <!-- Pagination -->
        <div class="flex justify-center my-8">
            <nav class="flex space-x-2" aria-label="Pagination">
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>" 
                       class="px-4 py-2 rounded-lg <%= currentPage === i ? 'bg-orange-500 text-white' : 'bg-gray-800 text-gray-400 hover:bg-gray-700' %>">
                        <%= i %>
                    </a>
                <% } %>
            </nav>
        </div>
    </div>

    <!-- Add/Edit Product Modal -->
    <div id="productModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-gray-800 rounded-lg p-8 max-w-4xl w-full mx-4">
            <h2 id="modalTitle" class="text-xl font-semibold text-gray-200 mb-6">Add New Product</h2>
            <form id="productForm" onsubmit="handleSubmit(event)">
                <input type="hidden" id="productId">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Basic Product Info -->
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-400 mb-1">Product Name</label>
                            <input type="text" id="productName" required
                                   class="w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-400 mb-1">Brand</label>
                            <input type="text" id="brand" required
                                   class="w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-400 mb-1">Category</label>
                            <select id="categoryId" required
                                    class="w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                                <option value="">Select Category</option>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-400 mb-1">Description</label>
                            <textarea id="description" rows="3" required
                                      class="w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500"></textarea>
                        </div>
                    </div>

                    <!-- Variants Section -->
                    <div>
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="text-lg font-medium text-gray-300">Variants</h3>
                            <button type="button" onclick="addVariant()"
                                    class="px-3 py-1 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors">
                                Add Variant
                            </button>
                        </div>
                        <div id="variantsContainer" class="space-y-4">
                            <!-- Variants will be added here dynamically -->
                        </div>
                    </div>
                </div>

                <div class="mt-6 flex justify-end space-x-4">
                    <button type="button" onclick="closeModal()"
                            class="px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition-colors">
                        Cancel
                    </button>
                    <button type="submit"
                            class="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors">
                        Save Product
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let variantCount = 0;

        function addVariant() {
            const variantsContainer = document.getElementById('variantsContainer');
            const variantDiv = document.createElement('div');
            variantDiv.className = 'p-4 bg-gray-700 rounded-lg space-y-3';
            variantDiv.id = `variant-${variantCount}`;
            
            variantDiv.innerHTML = `
                <div class="flex justify-between items-center">
                    <h4 class="text-gray-300 font-medium">Variant ${variantCount + 1}</h4>
                    <button type="button" onclick="removeVariant(${variantCount})"
                            class="text-red-400 hover:text-red-300">
                        <i class="material-icons">delete</i>
                    </button>
                </div>
                <div class="grid grid-cols-2 gap-3">
                    <div>
                        <label class="block text-sm font-medium text-gray-400 mb-1">Color</label>
                        <input type="text" name="variants[${variantCount}][color]" required
                               class="w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-400 mb-1">Size</label>
                        <select name="variants[${variantCount}][size]" required
                                class="w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                            <option value="S">Small (S)</option>
                            <option value="M">Medium (M)</option>
                            <option value="L">Large (L)</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-400 mb-1">Price</label>
                        <input type="number" name="variants[${variantCount}][price]" required min="0" step="0.01"
                               class="w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-400 mb-1">Stock</label>
                        <input type="number" name="variants[${variantCount}][stock]" required min="0"
                               class="w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                    </div>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-400 mb-1">Images</label>
                    <input type="file" name="variants[${variantCount}][images]" multiple accept="image/*"
                           class="w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-lg text-gray-200 focus:outline-none focus:border-orange-500">
                </div>
            `;
            
            variantsContainer.appendChild(variantDiv);
            variantCount++;
        }

        function removeVariant(index) {
            const variant = document.getElementById(`variant-${index}`);
            variant.remove();
        }

        // Modified handleSubmit function
        async function handleSubmit(event) {
            event.preventDefault();
            
            try {
                const formData = new FormData();
                
                // Add basic product info
                formData.append('name', document.getElementById('productName').value);
                formData.append('description', document.getElementById('description').value);
                formData.append('categoryId', document.getElementById('categoryId').value);
                
                // Add variants
                const variants = [];
                document.querySelectorAll('[id^="variant-"]').forEach((variantDiv, index) => {
                    const variant = {
                        color: variantDiv.querySelector('[name$="[color]"]').value,
                        size: variantDiv.querySelector('[name$="[size]"]').value,
                        price: variantDiv.querySelector('[name$="[price]"]').value,
                        stock: variantDiv.querySelector('[name$="[stock]"]').value
                    };
                    variants.push(variant);
                    
                    // Add images
                    const imageFiles = variantDiv.querySelector('[name$="[images]"]').files;
                    for (let i = 0; i < imageFiles.length; i++) {
                        formData.append(`variants[${index}][images]`, imageFiles[i]);
                    }
                });
                
                formData.append('variants', JSON.stringify(variants));

                const response = await fetch('/admin/products', {
                    method: 'POST',
                    body: formData // Don't set Content-Type header, browser will set it
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message,
                        confirmButtonColor: '#FF6B00'
                    });
                    window.location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message || 'Failed to add product',
                    confirmButtonColor: '#FF6B00'
                });
            }
        }

        // Modal functions
        function openAddModal() {
            document.getElementById('modalTitle').textContent = 'Add New Product';
            document.getElementById('productForm').reset();
            document.getElementById('productId').value = '';
            document.getElementById('productModal').classList.remove('hidden');
            document.getElementById('productModal').classList.add('flex');
        }

        function closeModal() {
            document.getElementById('productModal').classList.add('hidden');
            document.getElementById('productModal').classList.remove('flex');
        }

        // Edit product
        async function editProduct(id) {
            try {
                const response = await fetch(`/admin/products/${id}`);
                const data = await response.json();

                if (data.success) {
                    const product = data.product;
                    
                    document.getElementById('modalTitle').textContent = 'Edit Product';
                    document.getElementById('productId').value = product._id;
                    document.getElementById('productName').value = product.name;
                    document.getElementById('brand').value = product.brand;
                    document.getElementById('categoryId').value = product.categoryId._id;
                    document.getElementById('description').value = product.description;

                    document.getElementById('productModal').classList.remove('hidden');
                    document.getElementById('productModal').classList.add('flex');
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'Failed to load product details',
                    confirmButtonColor: '#FF6B00'
                });
            }
        }

        // Delete product
        async function deleteProduct(id) {
            try {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#FF6B00',
                    cancelButtonColor: '#718096',
                    confirmButtonText: 'Yes, delete it!'
                });

                if (result.isConfirmed) {
                    const response = await fetch(`/admin/products/${id}`, {
                        method: 'DELETE'
                    });

                    const data = await response.json();

                    if (data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: data.message,
                            confirmButtonColor: '#FF6B00'
                        });
                        window.location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message || 'Failed to delete product',
                    confirmButtonColor: '#FF6B00'
                });
            }
        }

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const products = document.querySelectorAll('.product-card');

            products.forEach(product => {
                const name = product.querySelector('.product-name').textContent.toLowerCase();
                const description = product.querySelector('.product-description').textContent.toLowerCase();

                if (name.includes(searchTerm) || description.includes(searchTerm)) {
                    product.style.display = '';
                } else {
                    product.style.display = 'none';
                }
            });
        });
    </script>
</body>
</html>