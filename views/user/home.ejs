<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Virtue Rider - Premium Helmets</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .slider-container img {
            transition: all 1.5s ease-in-out;
            will-change: transform, opacity;
        }
        
        .slider-dot {
            transition: all 0.3s ease;
            position: relative;
        }
        
        .slider-dot::after {
            content: '';
            position: absolute;
            inset: -4px;
            border-radius: 100%;
            background: transparent;
            border: 1px solid rgba(255,255,255,0.3);
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .slider-dot.active::after {
            opacity: 1;
        }

        .product-card {
            position: relative;
            perspective: 1000px;
            transform-style: preserve-3d;
            cursor: pointer;
        }

        .product-image-wrapper {
            position: relative;
            border-radius: 1rem;
            overflow: hidden;
            background: white;
            transform-style: preserve-3d;
            transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
        }

        .product-card:hover .product-image-wrapper {
            transform: translateZ(20px) rotateX(10deg) rotateY(10deg);
            box-shadow: 
                0 5px 15px rgba(0,0,0,0.1),
                0 15px 40px rgba(0,0,0,0.05);
        }

        .product-image {
            position: relative;
            aspect-ratio: 1;
            width: 100%;
            object-fit: cover;
            transform-style: preserve-3d;
            transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
        }

        .product-card:hover .product-image {
            transform: translateZ(10px) scale(1.05);
        }

        .shine-effect {
            position: absolute;
            inset: 0;
            background: linear-gradient(
                125deg,
                rgba(255,255,255,0) 0%,
                rgba(255,255,255,0) 40%,
                rgba(255,255,255,0.3) 50%,
                rgba(255,255,255,0) 60%,
                rgba(255,255,255,0) 100%
            );
            opacity: 0;
            transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
            pointer-events: none;
            mix-blend-mode: soft-light;
        }

        .product-card:hover .shine-effect {
            opacity: 1;
            transform: translateZ(30px);
        }

        .product-info {
            position: relative;
            background: white;
            margin-top: 1rem;
            padding: 1rem;
            border-radius: 0.75rem;
            transform: translateZ(10px);
            transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
        }

        .product-card:hover .product-info {
            transform: translateZ(40px);
        }
    </style>
</head>
<body class="bg-white">
    <%- include('../partials/header') %>

    <!-- Hero Banner -->
    <section class="relative h-[85vh] min-h-[700px] mb-8 overflow-hidden">
        <div class="absolute inset-0">
            <!-- Image Slider -->
            <div class="slider-container relative h-full">
                <img src="/images/home.jpg" 
                     alt="Motorcycle Gear" 
                     class="absolute w-full h-full object-cover object-center transition-all duration-1000 opacity-100 scale-105">
                <img src="/images/home 2.jpg" 
                     alt="Motorcycle Gear" 
                     class="absolute w-full h-full object-cover object-center transition-all duration-1000 opacity-0 scale-105">
                <img src="/images/home 3.jpg" 
                     alt="Motorcycle Gear" 
                     class="absolute w-full h-full object-cover object-center transition-all duration-1000 opacity-0 scale-105">
            </div>
            <div class="absolute inset-0 bg-gradient-to-r from-black/90 via-black/50 to-transparent"></div>
        </div>

        <!-- Slider Navigation -->
        <div class="absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-3 z-10">
            <button class="w-2.5 h-2.5 rounded-full bg-white/50 slider-dot active" data-index="0"></button>
            <button class="w-2.5 h-2.5 rounded-full bg-white/50 slider-dot" data-index="1"></button>
            <button class="w-2.5 h-2.5 rounded-full bg-white/50 slider-dot" data-index="2"></button>
        </div>

        <div class="relative h-full flex items-center">
            <div class="container mx-auto px-6 lg:px-12">
                <div class="max-w-xl">
                    <h1 class="text-5xl md:text-6xl text-white font-bold mb-4 leading-tight">
                        Ride Safe,<br>
                        Ride in Style
                    </h1>
                    <p class="text-xl text-white/90 mb-10 max-w-md font-light">
                        Premium motorcycle helmets for the modern rider. Safety meets sophistication.
                    </p>
                    <a href="/shop" class="inline-block bg-white text-black px-8 py-3.5 rounded-lg text-lg font-semibold 
                                  hover:bg-opacity-90 transform hover:-translate-y-0.5 transition-all 
                                  duration-300 shadow-lg hover:shadow-xl">
                        Explore Collection
                    </a>
                </div>
            </div>
        </div>
    </section>

    
<!-- Featured Products -->
<section id="featured" class="py-12 bg-gray-50">
    <div class="container mx-auto px-6">
        <!-- Section Header -->
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-end mb-8">
            <div class="mb-4 sm:mb-0">
                <div class="flex items-center gap-2 mb-2">
                    <span class="w-12 h-[2px] bg-black"></span>
                    <span class="text-gray-500 text-sm tracking-wider uppercase">Featured</span>
                </div>
                <h2 class="text-3xl sm:text-4xl font-bold bg-clip-text text-transparent 
                          bg-gradient-to-r from-gray-900 to-gray-600">
                    Latest Arrivals
                </h2>
            </div>
            <a href="/shop" class="group inline-flex items-center text-gray-600 hover:text-black 
                                 transition-colors font-medium">
                View Collection
                <span class="ml-2 transform transition-transform duration-300 group-hover:translate-x-1">→</span>
            </a>
        </div>

        <!-- Updated Products Grid -->
        <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-8">
            <% if (products && products.length > 0) { %>
                <% products.slice(0, 5).forEach(product => { %>
                    <div class="product-card">
                        <a href="/product/<%= product._id %>">
                            <div class="product-image-wrapper">
                                <img src="<%= product.images[0] %>" 
                                     alt="<%= product.name %>"
                                     class="product-image"
                                     loading="lazy">
                                
                                <div class="shine-effect"></div>
                                
                                <% if (product.offer) { %>
                                    <div class="absolute top-3 right-3 bg-red-500 text-white px-3 
                                                py-1.5 rounded-full text-xs font-semibold shadow-md
                                                transform-style: preserve-3d transform translateZ(20px)">
                                        <%= product.offer.discountAmount %><%= product.offer.discountType === 'percentage' ? '%' : '₹' %> OFF
                                    </div>
                                <% } %>
                            </div>
                        </a>

                        <div class="product-info">
                            <!-- Brand & Rating -->
                            <div class="flex justify-between items-center mb-1">
                                <span class="text-xs text-gray-600 font-medium"><%= product.brand %></span>
                                <div class="flex items-center gap-1">
                                    <i class="fas fa-star text-yellow-400 text-xs"></i>
                                    <span class="text-xs text-gray-600"><%= product.rating || 'N/A' %></span>
                                </div>
                            </div>

                            <!-- Product Name -->
                            <h3 class="text-gray-800 text-sm font-medium mb-2 truncate">
                                <%= product.name %>
                            </h3>

                            <!-- Price -->
                            <div class="flex items-baseline gap-2 mb-3">
                                <% if (product.offer) { %>
                                    <span class="text-base font-bold text-gray-900">₹<%= product.offer.discountedPrice.toFixed(2) %></span>
                                    <span class="text-xs text-gray-500 line-through">₹<%= product.price %></span>
                                <% } else { %>
                                    <span class="text-base font-bold text-gray-900">₹<%= product.price %></span>
                                <% } %>
                            </div>

                            <!-- Variants & Add to Cart -->
                            <% if (product.variants && product.variants.some(v => v.stock > 0)) { %>
                                <div class="space-y-2">
                                    <select id="variant-<%= product._id %>" 
                                            class="w-full px-2 py-1.5 text-xs border border-gray-200 rounded-md
                                                   focus:outline-none focus:border-gray-400 transition-colors"
                                            onchange="updateAddToCartButton('<%= product._id %>')">
                                        <% product.variants.forEach(variant => { %>
                                            <option value="<%= variant._id %>" 
                                                    data-stock="<%= variant.stock %>"
                                                    <%= variant.stock === 0 ? 'disabled' : '' %>>
                                                <%= variant.size %> (<%= variant.stock %>)
                                            </option>
                                        <% }); %>
                                    </select>
                                    <button id="add-to-cart-<%= product._id %>"
                                            onclick="addToCart('<%= product._id %>')"
                                            class="w-full py-2 bg-gray-900 text-white text-xs font-medium rounded-md
                                                   hover:bg-gray-800 transition-all duration-300 transform hover:scale-[1.02]">
                                        Add to Cart
                                    </button>
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="col-span-full text-center py-8">
                    <p class="text-gray-500">No products available</p>
                </div>
            <% } %>
        </div>
    </div>
</section>
  


    <%- include('../partials/footer') %>

    <!-- Add this before closing body tag -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const images = document.querySelectorAll('.slider-container img');
            const dots = document.querySelectorAll('.slider-dot');
            let currentSlide = 0;
            const slideCount = images.length;

            function showSlide(index) {
                // Hide all images
                images.forEach(img => {
                    img.style.opacity = '0';
                    img.style.transform = 'scale(1.05)';
                });
                dots.forEach(dot => dot.classList.remove('active', 'bg-white', 'scale-125'));
                
                // Show selected image
                images[index].style.opacity = '1';
                // Add a slight zoom effect
                setTimeout(() => {
                    images[index].style.transform = 'scale(1.0)';
                }, 50);
                dots[index].classList.add('active', 'bg-white', 'scale-125');
            }

            function nextSlide() {
                currentSlide = (currentSlide + 1) % slideCount;
                showSlide(currentSlide);
            }

            // Click handlers for dots
            dots.forEach((dot, index) => {
                dot.addEventListener('click', () => {
                    currentSlide = index;
                    showSlide(currentSlide);
                });
            });

            // Auto-advance slides
            setInterval(nextSlide, 6000); // Slightly longer duration for better viewing

            // Show first slide initially
            showSlide(0);
        });
    </script>

    <!-- Add SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Add Cart Functionality -->
    <script>
        // Track cart items
        let cartItems = [];

        // Function to update add to cart button state
        function updateAddToCartButton(productId) {
            const variantSelect = document.getElementById(`variant-${productId}`);
            const addToCartBtn = document.getElementById(`add-to-cart-${productId}`);
            const selectedVariant = variantSelect.options[variantSelect.selectedIndex];
            const variantId = variantSelect.value;
            
            // Check if this product variant is already in cart
            const isInCart = cartItems.some(item => 
                item.productId === productId && 
                item.variantId === variantId
            );
            
            if (isInCart) {
                addToCartBtn.disabled = true;
                addToCartBtn.classList.add('opacity-50', 'cursor-not-allowed');
                addToCartBtn.textContent = 'Already in Cart';
            } else {
                addToCartBtn.disabled = false;
                addToCartBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                addToCartBtn.textContent = 'Add to Cart';
            }
        }

        async function addToCart(productId) {
            try {
                const variantSelect = document.getElementById(`variant-${productId}`);
                if (!variantSelect) {
                    throw new Error('Please select a size');
                }
                const variantId = variantSelect.value;
                const addToCartBtn = document.getElementById(`add-to-cart-${productId}`);

                // Disable button while processing
                addToCartBtn.disabled = true;
                addToCartBtn.classList.add('opacity-50', 'cursor-not-allowed');

                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        productId: productId,
                        variantId: variantId 
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    // Update cart items
                    cartItems.push({
                        productId,
                        variantId
                    });

                    // Update button state
                    updateAddToCartButton(productId);

                    // Success notification
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        showConfirmButton: true,
                        confirmButtonText: 'Continue Shopping',
                        showDenyButton: true,
                        denyButtonText: 'Go to Cart',
                        customClass: {
                            confirmButton: 'bg-gray-800 text-white px-4 py-2 rounded-lg mr-2 hover:bg-gray-700',
                            denyButton: 'bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700'
                        }
                    }).then((result) => {
                        if (result.isDenied) {
                            window.location.href = '/cart';
                        }
                    });
                } else {
                    // Error notification
                    Swal.fire({
                        title: 'Error!',
                        text: data.message || 'Failed to add product to cart',
                        icon: 'error',
                        confirmButtonText: 'OK',
                        customClass: {
                            confirmButton: 'bg-gray-800 text-white px-4 py-2 rounded-lg hover:bg-gray-700'
                        }
                    });
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                // Error notification
                Swal.fire({
                    title: 'Authentication Error!',
                    text: 'Please login to add to cart',
                    icon: 'error',
                    confirmButtonText: 'OK',
                    customClass: {
                        confirmButton: 'bg-gray-800 text-white px-4 py-2 rounded-lg hover:bg-gray-700'
                    }
                });
            } finally {
                // Re-enable button
                const addToCartBtn = document.getElementById(`add-to-cart-${productId}`);
                if (addToCartBtn) {
                    updateAddToCartButton(productId);
                }
            }
        }

        // Initialize button states when page loads
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                // Fetch current cart items
                const response = await fetch('/cart');
                if (response.ok) {
                    const data = await response.json();
                    cartItems = data.items || [];
                }

                // Update all add to cart buttons
                const variantSelects = document.querySelectorAll('select[id^="variant-"]');
                variantSelects.forEach(select => {
                    const productId = select.id.replace('variant-', '');
                    updateAddToCartButton(productId);
                });
            } catch (error) {
                console.error('Error fetching cart:', error);
            }
        });
    </script>

    <!-- Add this script at the bottom of your file, before closing body tag -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.product-card');
            
            cards.forEach(card => {
                card.addEventListener('mousemove', handleMouseMove);
                card.addEventListener('mouseleave', handleMouseLeave);
                card.addEventListener('mouseenter', handleMouseEnter);
            });

            function handleMouseMove(e) {
                const card = e.currentTarget;
                const cardRect = card.getBoundingClientRect();
                const cardCenterX = cardRect.left + cardRect.width / 2;
                const cardCenterY = cardRect.top + cardRect.height / 2;
                
                // Calculate mouse position relative to card center
                const mouseX = e.clientX - cardCenterX;
                const mouseY = e.clientY - cardCenterY;
                
                // Calculate rotation angles (limited range)
                const rotateY = (mouseX / cardRect.width) * 20; // max 20 degrees
                const rotateX = -(mouseY / cardRect.height) * 20; // max 20 degrees

                // Apply transform with smooth transition
                const imageContainer = card.querySelector('.product-image-container');
                imageContainer.style.transform = `
                    rotateY(${rotateY}deg) 
                    rotateX(${rotateX}deg)
                    translateZ(10px)
                `;
            }

            function handleMouseLeave(e) {
                const card = e.currentTarget;
                const imageContainer = card.querySelector('.product-image-container');
                
                // Reset transform with transition
                imageContainer.style.transform = 'rotateY(0) rotateX(0) translateZ(0)';
            }

            function handleMouseEnter(e) {
                const card = e.currentTarget;
                card.classList.add('active');
            }
        });
    </script>
</body>
</html>
