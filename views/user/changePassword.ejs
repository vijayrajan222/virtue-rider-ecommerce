<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <title>Onyx - Change Password</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
  </head>
  <body class="bg-gray-100">
    <%- include("../partials/nav") %>
    <div class="h-10"></div>
    
    <main class="container mx-auto flex flex-col md:flex-row py-10 px-6 gap-6">
      <%- include("../partials/profileSidebar") %>
      
      <section class="w-full md:w-3/4 bg-white p-6 rounded-lg shadow-md">
        <h2 class="text-xl font-bold mb-6 text-gray-800">Change Password</h2>
        
        <form id="changePasswordForm" class="space-y-6">
          <div class="space-y-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2" for="currentPassword">
                Current Password
              </label>
              <input
                class="w-full border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-black focus:border-transparent transition"
                id="currentPassword"
                type="password"
                placeholder="Enter your current password"
                name="currentPassword"
              />
              <p id="currentPasswordError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2" for="newPassword">
                New Password
              </label>
              <input
                class="w-full border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-black focus:border-transparent transition"
                id="newPassword"
                type="password"
                placeholder="Enter your new password"
                name="newPassword"
              />
              <p id="newPasswordError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2" for="confirmPassword">
                Confirm New Password
              </label>
              <input
                class="w-full border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-black focus:border-transparent transition"
                id="confirmPassword"
                type="password"
                placeholder="Confirm your new password"
                name="confirmPassword"
              />
              <p id="confirmPasswordError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
            </div>
          </div>

          <!-- Loading Spinner -->
          <div id="loading-spinner" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white p-5 rounded-lg flex flex-col items-center">
              <div class="loader mb-3"></div>
              <p class="text-gray-700">Updating password...</p>
            </div>
          </div>

          <div class="flex justify-center mt-6">
            <button
              class="bg-black text-white rounded-lg py-3 px-6 hover:bg-gray-800 transition-colors focus:ring-2 focus:ring-offset-2 focus:ring-black"
              type="submit"
            >
              Update Password
            </button>
          </div>
        </form>
      </section>
    </main>
    
    <%- include("../partials/footer") %>

    <script>
      document.getElementById("changePasswordForm").addEventListener("submit", async (e) => {
        e.preventDefault();

        const currentPassword = document.getElementById("currentPassword").value;
        const newPassword = document.getElementById("newPassword").value;
        const confirmPassword = document.getElementById("confirmPassword").value;
        const loadingSpinner = document.getElementById("loading-spinner");

        // Helper functions for error handling
        const showError = (elementId, message) => {
          const errorElement = document.getElementById(elementId);
          errorElement.textContent = message;
          errorElement.classList.remove('hidden');
          document.getElementById(elementId.replace('Error', '')).classList.add('border-red-500');
        };

        const hideError = (elementId) => {
          const errorElement = document.getElementById(elementId);
          errorElement.classList.add('hidden');
          document.getElementById(elementId.replace('Error', '')).classList.remove('border-red-500');
        };

        // Clear previous errors
        ['currentPassword', 'newPassword', 'confirmPassword'].forEach(id => {
          hideError(`${id}Error`);
        });

        let hasErrors = false;

        // Basic validation
        if (!currentPassword) {
          showError('currentPasswordError', 'Current password is required');
          hasErrors = true;
        }

        if (!newPassword) {
          showError('newPasswordError', 'New password is required');
          hasErrors = true;
        }

        if (!confirmPassword) {
          showError('confirmPasswordError', 'Please confirm your new password');
          hasErrors = true;
        }

        // Password strength validation
        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,12}$/;
        if (newPassword && !passwordRegex.test(newPassword)) {
          showError('newPasswordError', 'Password must be between 8 and 12 characters long and contain uppercase, lowercase and a number');
          hasErrors = true;
        }

        // Password match validation
        if (newPassword && confirmPassword && newPassword !== confirmPassword) {
          showError('confirmPasswordError', 'New password and confirm password do not match');
          hasErrors = true;
        }

        if (hasErrors) return;

        // Show loading spinner
        loadingSpinner.classList.remove('hidden');

        try {
          const response = await fetch('/change-password', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              currentPassword,
              newPassword,
            }),
          });

          const data = await response.json();
          
          // Hide loading spinner
          loadingSpinner.classList.add('hidden');

          if (response.ok) {
            // Show success message
            const successMessage = document.createElement('div');
            successMessage.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
            successMessage.innerHTML = `
              <div class="bg-white p-5 rounded-lg flex flex-col items-center">
                <div class="text-green-600 mb-3">
                  <i class="fas fa-check-circle text-4xl"></i>
                </div>
                <p class="text-gray-700 font-semibold">Password Updated Successfully!</p>
              </div>
            `;
            document.body.appendChild(successMessage);

            // Redirect after 2 seconds
            setTimeout(() => {
              window.location.href = '/profile';
            }, 2000);
          } else {
            if (data.message.toLowerCase().includes('current password')) {
              showError('currentPasswordError', data.message);
            } else {
              showError('newPasswordError', data.message);
            }
          }
        } catch (error) {
          console.error("Error:", error);
          loadingSpinner.classList.add('hidden');
          showError('currentPasswordError', 'An error occurred while updating your password');
        }
      });

      // Add input event listeners to clear errors when typing
      ['currentPassword', 'newPassword', 'confirmPassword'].forEach(id => {
        document.getElementById(id).addEventListener('input', () => {
          hideError(`${id}Error`);
        });
      });
    </script>
  </body>
</html> 