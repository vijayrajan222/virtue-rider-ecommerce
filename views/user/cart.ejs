<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="tailwindcss/output.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <title>Onyx Cart</title>
  </head>

  <body class="bg-gray-100">
    <%- include("../partials/nav") %>

    <!-- Cart Section -->
    <div class="container mx-auto px-4 py-8 mt-28">
      <!-- Mobile View (visible only on small screens) -->
      <div class="md:hidden">
        <!-- Order Summary Card -->
        <div class="bg-white p-4 rounded-xl shadow-md mb-6">
          <div class="flex justify-between items-center">
            <h2 class="text-lg font-semibold">Order Total:</h2>
            <span class="text-xl font-bold">₹<%= total %></span>
          </div>
          <% if (cartItems && cartItems.length > 0) { %>
            <button onclick="location.href='/checkout'" class="w-full mt-4 bg-black text-white py-3 rounded-xl font-medium">
              Checkout (<%= cartItems.length %> items)
            </button>
          <% } %>
        </div>

        <!-- Cart Items -->
        <div class="space-y-4">
          <% if (cartItems && cartItems.length > 0) { %>
            <% cartItems.forEach(item => { %>
              <div class="bg-white p-4 rounded-xl shadow-md" id="cart-item-<%= item.product._id %>">
                <div class="flex gap-4">
                  <img
                    src="<%= item.product.imageUrl[0] %>"
                    alt="<%= item.product.productName %>"
                    class="w-24 h-24 object-cover rounded-lg"
                  />
                  <div class="flex-1">
                    <div class="flex justify-between">
                      <h3 class="font-semibold text-gray-800"><%= item.product.productName %></h3>
                      <button 
                        onclick="removeFromCart(this, '<%= item.product._id %>')"
                        class="text-red-500"
                      >
                        <i class="fas fa-trash-alt"></i>
                      </button>
                    </div>
                    <p class="text-sm text-gray-500">Color: <%= item.product.color %></p>
                    <p class="text-sm text-green-500"><%= item.product.stock > 0 ? 'In Stock' : 'Out of Stock' %></p>
                    <div class="mt-2 flex justify-between items-center">
                      <div class="flex items-center bg-gray-100 rounded-lg">
                        <button 
                          class="quantity-btn px-3 py-1 text-gray-600 <%= item.quantity <= 1 ? 'opacity-50' : '' %>"
                          onclick="updateQuantity(this, '<%= item.product._id %>', 'decrease')"
                          <%= item.quantity <= 1 ? 'disabled' : '' %>
                        >
                          <i class="fas fa-minus"></i>
                        </button>
                        <span class="quantity-display px-3 font-medium"><%= item.quantity %></span>
                        <button 
                          class="quantity-btn px-3 py-1 text-gray-600 <%= item.quantity >= 3 ? 'opacity-50' : '' %>"
                          onclick="updateQuantity(this, '<%= item.product._id %>', 'increase')"
                          <%= item.quantity >= 3 ? 'disabled' : '' %>
                        >
                          <i class="fas fa-plus"></i>
                        </button>
                      </div>
                      <div class="text-right">
                        <div class="font-semibold" id="subtotal-<%= item.product._id %>">₹<%= item.subtotal %></div>
                        <div class="text-sm text-gray-500">₹<%= item.price %> each</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <div class="bg-white p-8 rounded-xl shadow-md text-center">
              <i class="fas fa-shopping-cart text-4xl text-gray-400 mb-4"></i>
              <p class="text-gray-500 mb-4">Your cart is empty</p>
              <a href="/shop" class="inline-block bg-black text-white px-6 py-2 rounded-lg">
                Continue Shopping
              </a>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Desktop View (hidden on mobile) -->
      <div class="hidden md:flex flex-row-reverse items-start space-x-reverse space-x-8">
        <!-- Products Section (Right Side) -->
        <div class="w-3/4">
          <div class="bg-white p-8 rounded-2xl shadow-lg">
            <h1 class="text-3xl font-bold text-gray-800 mb-8">Shopping Cart</h1>
            <% if (cartItems && cartItems.length > 0) { %>
              <div class="space-y-6">
                <% cartItems.forEach(item => { %>
                  <div class="flex items-center border-b pb-6" id="cart-item-<%= item.product._id %>">
                    <img
                      src="<%= item.product.imageUrl[0] %>"
                      alt="<%= item.product.productName %>"
                      class="w-32 h-32 object-cover rounded-xl"
                    />
                    <div class="flex-1 ml-6">
                      <div class="flex justify-between items-start">
                        <div>
                          <h3 class="text-lg font-semibold text-gray-800" id="product-name">
                            <%= item.product.productName %>
                          </h3>
                          <p class="text-gray-500 text-sm mt-1">
                            Color: <%= item.product.color %>
                          </p>
                          <p class="text-green-500 text-sm mt-1">
                            <%= item.product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
                          </p>
                        </div>
                        <button 
                            onclick="removeFromCart(this, '<%= item.product._id %>')" 
                            class="text-red-500 hover:text-red-700 transition-colors"
                        >
                            <i class="fas fa-trash-alt"></i>
                        </button>
                      </div>
                      <div class="flex justify-between items-center mt-4">
                        <div class="flex items-center space-x-2">
                          <button 
                            class="quantity-btn bg-gray-200 text-gray-600 w-8 h-8 rounded-full hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed transition-all"
                            onclick="updateQuantity(this, '<%= item.product._id %>', 'decrease')"
                            <%= item.quantity <= 1 ? 'disabled' : '' %>
                          >
                            <i class="fas fa-minus"></i>
                          </button>
                          <span class="quantity-display w-8 text-center font-medium">
                            <%= item.quantity %>
                          </span>
                          <button 
                            class="quantity-btn bg-gray-200 text-gray-600 w-8 h-8 rounded-full hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed transition-all"
                            onclick="updateQuantity(this, '<%= item.product._id %>', 'increase')"
                            <%= item.quantity >= 3 ? 'disabled' : '' %>
                          >
                            <i class="fas fa-plus"></i>
                          </button>
                        </div>
                        <div class="text-right">
                          <div class="text-lg font-semibold text-gray-800" id="subtotal">
                            ₹<%= item.subtotal %>
                          </div>
                          <div class="text-sm text-gray-500">
                            ₹<%= item.price %> each
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
              <div class="mt-8 flex justify-end">
                <div class="text-xl font-bold text-gray-800" id="total">
                  Total: ₹<%= total %>
                </div>
              </div>
            <% } else { %>
              <div class="text-center py-8">
                <i class="fas fa-shopping-cart text-4xl text-gray-400 mb-4"></i>
                <p class="text-gray-500">Your cart is empty</p>
                <a href="/shop" class="inline-block mt-4 bg-black text-white px-6 py-2 rounded-lg hover:bg-gray-800">
                  Continue Shopping
                </a>
              </div>
            <% } %>
          </div>
        </div>

        <!-- Checkout Section (Left Side) -->
        <div class="w-1/4">
          <div class="bg-white p-6 rounded-2xl shadow-lg">
            <h2 class="text-xl font-bold text-gray-800 mb-6">Order Summary</h2>
            
            <!-- Price Details -->
            <div class="space-y-4 mb-6">
              <div class="flex justify-between text-gray-600">
                <span id="items-count">Subtotal (<%= cartItems.length %> items)</span>
                <span id="subtotal-amount">₹<%= total %></span>
              </div>
              <div class="flex justify-between text-gray-600">
                <span>Shipping</span>
                <span class="text-green-500">Free</span>
              </div>
            </div>

            <!-- Total -->
            <div class="border-t border-b py-4 mb-6">
              <div class="flex justify-between items-center">
                <span class="text-base font-medium text-gray-800">Total Amount</span>
                <span class="text-xl font-bold text-gray-800" id="total-amount">₹<%= total %></span>
              </div>
            </div>

            <!-- Checkout Button -->
            <% if (cartItems && cartItems.length > 0) { %>
              <button onclick="location.href='/checkout'" class="checkout-button w-full bg-black text-white py-3 rounded-xl font-medium hover:bg-gray-800 transition-all duration-300 ">
                Proceed to Checkout
              </button>
            <% } else { %>
              <button class="checkout-button w-full bg-gray-300 text-gray-500 py-3 rounded-xl font-medium cursor-not-allowed" disabled>
                Cart is Empty
              </button>
            <% } %>

            <!-- Additional Info -->
            <div class="mt-4 text-center text-xs text-gray-500">
              <p class="flex items-center justify-center gap-2">
                <i class="fas fa-shield-alt"></i>
                Secure Checkout
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <%- include('../partials/footer') %>

    <!-- Modal Backdrop -->
    <div id="modalBackdrop" class="fixed inset-0 bg-black/50 z-40 hidden transition-opacity duration-300 opacity-0"></div>

    <!-- Alert Modal -->
    <div id="alertModal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
      <div class="bg-white rounded-2xl p-8 max-w-sm w-full mx-4 transform transition-all duration-300 scale-90 opacity-0 translate-y-4">
        <!-- Success Template -->
        <div id="successAlert" class="hidden">
          <div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-green-100 mb-6">
            <i class="fas fa-check text-2xl text-green-600"></i>
          </div>
          <h3 class="text-xl font-semibold text-center text-gray-900 mb-2">Success!</h3>
          <p id="successMessage" class="text-gray-600 text-center mb-6">Item removed successfully</p>
          <button onclick="hideAlert()" class="w-full py-3 px-4 bg-black hover:bg-gray-800 text-white rounded-xl transition-colors duration-200">
            Continue
          </button>
        </div>

        <!-- Error Template -->
        <div id="errorAlert" class="hidden">
          <div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-red-100 mb-6">
            <i class="fas fa-exclamation text-2xl text-red-600"></i>
          </div>
          <h3 class="text-xl font-semibold text-center text-gray-900 mb-2">Error</h3>
          <p id="errorMessage" class="text-gray-600 text-center mb-6">Something went wrong</p>
          <button onclick="hideAlert()" class="w-full py-3 px-4 bg-black hover:bg-gray-800 text-white rounded-xl transition-colors duration-200">
            Try Again
          </button>
        </div>

        <!-- Confirmation Template -->
        <div id="confirmAlert" class="hidden">
          <div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-yellow-100 mb-6">
            <i class="fas fa-question text-2xl text-yellow-600"></i>
          </div>
          <h3 class="text-xl font-semibold text-center text-gray-900 mb-2">Remove Item?</h3>
          <p class="text-gray-600 text-center mb-6">Are you sure you want to remove this item from your cart?</p>
          <div class="flex gap-4">
            <button id="confirmYes" class="flex-1 py-3 px-4 bg-black hover:bg-gray-800 text-white rounded-xl transition-colors duration-200">
              Yes, remove it
            </button>
            <button onclick="hideAlert()" class="flex-1 py-3 px-4 bg-red-600 hover:bg-red-700 text-white rounded-xl transition-colors duration-200">
              Cancel
            </button>
          </div>
        </div>
      </div>
    </div>

    <script>
      let updateTimeout;
      let isUpdating = false;

      function checkProductAvailability(item) {
          if (!item.product.isActive || !item.product.categoriesId) {
              showAlert('error', 'This product is no longer available');
              removeFromCart(null, item.product._id);
              return false;
          }
          return true;
      }

      async function updateQuantity(button, productId, action) {
        const cartItem = button.closest('[id^="cart-item-"]');
        if (!cartItem) return;

        const quantityDisplay = cartItem.querySelector('.quantity-display');
        const currentQuantity = parseInt(quantityDisplay.textContent);
        
        let newQuantity;
        if (action === 'increase') {
            if (currentQuantity >= 3) return;
            newQuantity = currentQuantity + 1;
        } else {
            if (currentQuantity <= 1) return;
            newQuantity = currentQuantity - 1;
        }

        // Disable buttons during update
        const buttons = cartItem.querySelectorAll('.quantity-btn');
        buttons.forEach(btn => btn.disabled = true);

        try {
            const response = await fetch('/cart/update-quantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId,
                    quantity: newQuantity
                })
            });

            const data = await response.json();

            if (data.success) {
                // Update quantity display
                quantityDisplay.textContent = newQuantity;

                // Update subtotal
                const subtotalElement = cartItem.querySelector(`#subtotal-${productId}`);
                if (subtotalElement) {
                    subtotalElement.textContent = `₹${data.subtotal}`;
                }

                // Update all total elements
                const totalElements = document.querySelectorAll('#total, #total-amount, #subtotal-amount');
                totalElements.forEach(el => {
                    if (el.id === 'total') {
                        el.textContent = `Total: ₹${data.total}`;
                    } else {
                        el.textContent = `₹${data.total}`;
                    }
                });

                // Update button states
                const minusBtn = cartItem.querySelector('.quantity-btn:first-child');
                const plusBtn = cartItem.querySelector('.quantity-btn:last-child');
                
                if (minusBtn) minusBtn.disabled = newQuantity <= 1;
                if (plusBtn) plusBtn.disabled = newQuantity >= 3;

                // Success feedback
                button.classList.add('bg-green-200');
                setTimeout(() => button.classList.remove('bg-green-200'), 300);
            } else {
                throw new Error(data.message);
            }
        } catch (error) {
            // Revert quantity display
            quantityDisplay.textContent = currentQuantity;
            
            // Error feedback
            button.classList.add('bg-red-200');
            setTimeout(() => button.classList.remove('bg-red-200'), 300);
            
            showAlert('error', error.message || 'Failed to update quantity');
        } finally {
            // Re-enable buttons
            buttons.forEach(btn => btn.disabled = false);
        }
      }

      function showAlert(type, message = '') {
        const modal = document.getElementById('alertModal');
        const backdrop = document.getElementById('modalBackdrop');
        const modalContent = modal.querySelector('div > div');
        
        // Hide all alert types
        document.getElementById('successAlert').classList.add('hidden');
        document.getElementById('errorAlert').classList.add('hidden');
        document.getElementById('confirmAlert').classList.add('hidden');
        
        // Show selected alert type
        const alertElement = document.getElementById(`${type}Alert`);
        alertElement.classList.remove('hidden');
        
        if (message) {
          const messageElement = document.getElementById(`${type}Message`);
          if (messageElement) {
            messageElement.textContent = message;
          }
        }
        
        // Show modal with animation
        modal.classList.remove('hidden');
        backdrop.classList.remove('hidden');
        setTimeout(() => {
          backdrop.classList.remove('opacity-0');
          modalContent.classList.remove('scale-90', 'opacity-0', 'translate-y-4');
        }, 50);

        return new Promise((resolve) => {
          if (type === 'confirm') {
            document.getElementById('confirmYes').onclick = () => {
              hideAlert();
              resolve(true);
            };
          } else if (type === 'success') {
            const continueButton = alertElement.querySelector('button');
            continueButton.onclick = () => {
              hideAlert();
              window.location.reload();
            };
          }
        });
      }

      function hideAlert() {
        const modal = document.getElementById('alertModal');
        const backdrop = document.getElementById('modalBackdrop');
        const modalContent = modal.querySelector('div > div');
        
        backdrop.classList.add('opacity-0');
        modalContent.classList.add('scale-90', 'opacity-0', 'translate-y-4');
        
        setTimeout(() => {
          modal.classList.add('hidden');
          backdrop.classList.add('hidden');
        }, 0);
      }

      async function removeFromCart(button, productId) {
        const confirmed = await showAlert('confirm');
        
        if (confirmed) {
            try {
                const response = await fetch(`/cart/remove/${productId}`, {
                    method: 'DELETE'
                });

                const data = await response.json();

                if (response.ok) {
                    // Remove the item from the cart UI
                    const cartItem = document.getElementById(`cart-item-${productId}`);
                    if (cartItem) {
                        cartItem.remove();
                    }

                    // Update totals
                    updateCartTotals(data.total);
                    
                    // Show success message
                    await showAlert('success', data.message);
                    
                    // Reload if cart is empty
                    if (data.itemCount === 0) {
                        window.location.reload();
                    }
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                showAlert('error', error.message || 'Failed to remove item');
            }
        }
      }

      function updateCartTotals(total) {
        // Update all total elements
        const totalElements = document.querySelectorAll('#total, #total-amount, #subtotal-amount');
        totalElements.forEach(el => {
            if (el.id === 'total') {
                el.textContent = `Total: ₹${total}`;
            } else {
                el.textContent = `₹${total}`;
            }
        });

        // Update items count
        const itemsCount = document.getElementById('items-count');
        const cartItems = document.querySelectorAll('[id^="cart-item-"]');
        if (itemsCount) {
            itemsCount.textContent = `Subtotal (${cartItems.length} items)`;
        }

        // If cart is empty, reload page to show empty cart message
        if (cartItems.length === 0) {
            window.location.reload();
        }
      }
      
    </script>

    <style>
      .quantity-btn {
        transition: all 0.2s ease;
      }

      .quantity-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
      }

      .quantity-btn:not(:disabled):hover {
        transform: scale(1.05);
      }

      .quantity-btn:not(:disabled):active {
        transform: scale(0.95);
      }
    </style>
  </body>
</html>
