<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="tailwindcss/output.css" />
    <title>Forgot Password</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
</head>
<body class="bg-gray-300">
    <!------------ Navbar ---------->
    <%- include("../partials/nav") %>
    <div class="mt-16"></div>

    <!-- Centered Forgot Password Card -->
    <div class="mt-28 flex items-center justify-center my-16 px-4 sm:px-8">
      <div class="w-full max-w-md p-8 bg-white shadow-lg rounded-2xl border border-black/20">
        <h2 class="text-2xl font-semibold text-center mb-6">Forgot Password</h2>
        <p class="text-sm text-gray-600 text-center mb-6">
          Enter your email address and we'll send you an OTP to reset your password.
        </p>

        <!-- Forgot Password Form -->
        <form id="forgotPasswordForm" class="space-y-4" novalidate>
          <!-- Email Input -->
          <div>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="Email"
              class="w-full p-3 rounded-lg bg-gray-300 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
              required
            />
            <p id="emailError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
          </div>

          <!-- OTP Input (Initially Hidden) -->
          <div id="otpSection" class="hidden space-y-4">
            <input
              type="text"
              id="otp"
              placeholder="Enter 6-digit OTP"
              class="w-full p-3 rounded-lg bg-gray-300 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            <p id="otpError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
            <div class="text-center">
              <button 
                type="button" 
                id="resendOtp"
                class="text-blue-600 hover:underline"
              >
                Resend OTP
              </button>
              <div id="resendTimer" class="text-sm text-gray-600 mt-1 hidden"></div>
              <p id="resendMessage" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
            </div>
          </div>

          <!-- Password Reset Section (Initially Hidden) -->
          <div id="passwordSection" class="hidden space-y-4">
            <div>
              <input
                type="password"
                id="newPassword"
                placeholder="New Password"
                class="w-full p-3 rounded-lg bg-gray-300 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
              <p id="newPasswordError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
            </div>
            <div>
              <input
                type="password"
                id="confirmPassword"
                placeholder="Confirm Password"
                class="w-full p-3 rounded-lg bg-gray-300 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
              <p id="confirmPasswordError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
            </div>
          </div>

          <!-- Submit Button -->
          <button 
            type="submit" 
            id="submitButton"
            class="w-full py-3 bg-black text-white font-semibold rounded-lg hover:bg-gray-800"
          >
            Send OTP
          </button>
        </form>

        <!-- Back to Login Link -->
        <div class="text-center mt-6">
          <a href="/login" class="text-sm text-gray-500 hover:underline">
            Back to Login
          </a>
        </div>

        <!-- Loading Spinner -->
        <div id="loading-spinner" class="hidden fixed inset-0 bg-black/50 flex items-center justify-center z-50">
          <div class="bg-white p-5 rounded-lg flex flex-col items-center">
            <div class="w-10 h-10 border-4 border-gray-200 border-t-blue-500 rounded-full animate-spin mb-3"></div>
            <p class="text-gray-700">Processing...</p>
          </div>
        </div>
      </div>
    </div>

    <!------------- Footer ------------>
    <%- include("../partials/footer") %>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let userEmail = '';
            let otpVerified = false;
            const otpSection = document.getElementById('otpSection');
            const passwordSection = document.getElementById('passwordSection');
            const submitButton = document.getElementById('submitButton');
            const emailInput = document.getElementById('email');
            const loadingSpinner = document.getElementById('loading-spinner');
            const resendButton = document.getElementById('resendOtp');
            const resendTimer = document.getElementById('resendTimer');
            const resendMessage = document.getElementById('resendMessage');

            // Helper functions for error handling
            const showError = (elementId, message) => {
                const errorElement = document.getElementById(elementId);
                errorElement.textContent = message;
                errorElement.classList.remove('hidden');
                document.getElementById(elementId.replace('Error', '')).classList.add('border-red-500');
            };

            const hideError = (elementId) => {
                const errorElement = document.getElementById(elementId);
                errorElement.classList.add('hidden');
                document.getElementById(elementId.replace('Error', '')).classList.remove('border-red-500');
            };

            // Clear errors on input
            ['email', 'otp', 'newPassword', 'confirmPassword'].forEach(id => {
                const element = document.getElementById(id);
                if (element) {
                    element.addEventListener('input', () => hideError(`${id}Error`));
                }
            });

            document.getElementById('forgotPasswordForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                
                if (!otpVerified && !document.getElementById('otp').value) {
                    userEmail = emailInput.value.trim();

                    // Email validation
                    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(userEmail)) {
                        showError('emailError', 'Please enter a valid email address');
                        return;
                    }

                    loadingSpinner.classList.remove('hidden');

                    try {
                        const response = await fetch('/forgot-password/send-otp', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ email: userEmail })
                        });

                        const data = await response.json();
                        loadingSpinner.classList.add('hidden');

                        if (response.ok) {
                            emailInput.readOnly = true;
                            otpSection.classList.remove('hidden');
                            submitButton.textContent = 'Verify OTP';
                            hideError('emailError');
                        } else {
                            showError('emailError', data.message);
                        }
                    } catch (error) {
                        loadingSpinner.classList.add('hidden');
                        showError('emailError', 'Failed to send OTP. Please try again.');
                    }
                } else if (!otpVerified && document.getElementById('otp').value) {
                    const otpValue = document.getElementById('otp').value;
                    
                    if (otpValue.length !== 6) {
                        showError('otpError', 'Please enter a valid 6-digit OTP');
                        return;
                    }

                    loadingSpinner.classList.remove('hidden');

                    try {
                        const response = await fetch('/forgot-password/verify-otp', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ email: userEmail, otp: otpValue })
                        });

                        const data = await response.json();
                        loadingSpinner.classList.add('hidden');

                        if (response.ok) {
                            otpVerified = true;
                            otpSection.classList.add('hidden');
                            passwordSection.classList.remove('hidden');
                            submitButton.textContent = 'Reset Password';
                            hideError('otpError');
                        } else {
                            showError('otpError', data.message);
                        }
                    } catch (error) {
                        loadingSpinner.classList.add('hidden');
                        showError('otpError', 'Failed to verify OTP. Please try again.');
                    }
                } else {
                    // Password Reset Section
                    const newPassword = document.getElementById('newPassword').value;
                    const confirmPassword = document.getElementById('confirmPassword').value;

                    // Validation
                    if (!newPassword || !confirmPassword) {
                        showError('newPasswordError', 'Please fill in all password fields');
                        return;
                    }

                    if (newPassword !== confirmPassword) {
                        showError('confirmPasswordError', 'Passwords do not match');
                        return;
                    }

                    loadingSpinner.classList.remove('hidden');

                    try {
                        const response = await fetch('/forgot-password/reset-password', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                email: userEmail,
                                newPassword
                            })
                        });

                        const data = await response.json();
                        loadingSpinner.classList.add('hidden');

                        if (response.ok) {
                            // Show success message and redirect
                            const successMessage = document.createElement('div');
                            successMessage.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
                            successMessage.innerHTML = `
                                <div class="bg-white p-5 rounded-lg flex flex-col items-center">
                                    <div class="text-green-600 mb-3">
                                        <i class="fas fa-check-circle text-4xl"></i>
                                    </div>
                                    <p class="text-gray-700 font-semibold">Password Reset Successfully!</p>
                                </div>
                            `;
                            document.body.appendChild(successMessage);

                            setTimeout(() => {
                                window.location.href = '/login';
                            }, 2000);
                        } else {
                            showError('newPasswordError', data.message);
                        }
                    } catch (error) {
                        loadingSpinner.classList.add('hidden');
                        showError('newPasswordError', 'Failed to reset password. Please try again.');
                    }
                }
            });

            // Resend OTP handler
            resendButton.addEventListener('click', async () => {
                loadingSpinner.classList.remove('hidden');
                
                try {
                    const response = await fetch('/forgot-password/send-otp', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ email: userEmail })
                    });

                    const data = await response.json();
                    loadingSpinner.classList.add('hidden');

                    if (response.ok) {
                        resendButton.disabled = true;
                        resendMessage.textContent = 'OTP sent successfully!';
                        resendMessage.style.color = '#065F46';
                        resendMessage.classList.remove('hidden');

                        // Start countdown timer
                        let timeLeft = 60;
                        resendTimer.classList.remove('hidden');
                        const countdownInterval = setInterval(() => {
                            resendTimer.textContent = `Resend available in ${timeLeft}s`;
                            timeLeft--;

                            if (timeLeft < 0) {
                                clearInterval(countdownInterval);
                                resendButton.disabled = false;
                                resendTimer.classList.add('hidden');
                                resendMessage.classList.add('hidden');
                            }
                        }, 1000);
                    } else {
                        resendMessage.textContent = data.message;
                        resendMessage.style.color = '#9B1C1C';
                        resendMessage.classList.remove('hidden');
                    }
                } catch (error) {
                    loadingSpinner.classList.add('hidden');
                    resendMessage.textContent = 'Failed to resend OTP';
                    resendMessage.style.color = '#9B1C1C';
                    resendMessage.classList.remove('hidden');
                }
            });
        });
    </script>
</body>
</html> 