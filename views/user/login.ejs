<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <title>User login</title>
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <meta
      name="google-signin-client_id"
      content="YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
  </head>

  <body class="bg-gray-300">
    <!------------ Navbar ---------->
    <%- include("../partials/nav") %>
    <div class="mt-16"></div>
 <div class=""></div>
    <!-- Centered Login Card -->
    <div class="mt-28 flex items-center justify-center my-16 px-4 sm:px-8">
      <div
        class="w-full max-w-md p-8 bg-white shadow-lg rounded-2xl border border-black/20"
      >
        <h2 class="text-2xl font-semibold text-center mb-6">Login</h2>

        <!-- Login Form -->
        <form action="/login" method="post" class="space-y-4" novalidate>
          <!-- Email Input -->
          <div>
            <input
              type="email"
              name="email"
              placeholder="Email"
              id="email"
              class="w-full p-3 rounded-lg bg-gray-300 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
              required
            />
            <p id="emailError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
          </div>

          <!-- Password Input -->
          <div class="relative">
            <input
              type="password"
              name="password"
              placeholder="Password"
              id="password"
              class="w-full p-3 rounded-lg bg-gray-300 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500"
              required
            />
            <button type="button" class="absolute right-3 top-3 text-gray-600">
              <i class="fa-regular fa-eye"></i>
            </button>
            <p id="passwordError" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
          </div>
          
          <!-- Sign up and Forgot Password Links -->
          <div class="flex justify-between text-sm text-gray-500">
            <a href="signup" class="hover:underline">Signup</a>
            <a href="forgotPassword" class="hover:underline">Forgot Password?</a>
          </div>
          <!-- Submit Button -->
          <button type="submit" class="w-full py-3 bg-black text-white font-semibold rounded-lg hover:bg-gray-800">
            Login
          </button>
        </form>

        <!-- Google Sign in -->
        <div class="flex justify-center text-center mt-6 text-gray-500 text-sm">
          Or continue with Google
        </div>
        <a class="flex justify-center mt-6" href="/auth/google?trigger=login">
          <i class="fa-brands fa-google fa-lg" style="color: #b12020"></i>
        </a>

        <div id="loading-spinner" class="hidden fixed inset-0 bg-black/50 flex items-center justify-center z-50">
            <div class="bg-white p-5 rounded-lg flex flex-col items-center">
                <div class="w-10 h-10 border-4 border-gray-200 border-t-blue-500 rounded-full animate-spin mb-3"></div>
                <p class="text-gray-700">Logging in...</p>
            </div>
        </div>
      </div>
    </div>

    <!------------- Footer ------------>
    <%- include("../partials/footer") %>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const passwordToggle = document.querySelector('.fa-eye');
        const loadingSpinner = document.getElementById('loading-spinner');
        const emailError = document.getElementById('emailError');
        const passwordError = document.getElementById('passwordError');

        // Helper function to show error
        const showError = (element, message) => {
            element.textContent = message;
            element.classList.remove('hidden');
            // Add red border to input
            element.previousElementSibling.classList.add('border-red-500');
        };

        // Helper function to hide error
        const hideError = (element) => {
            element.classList.add('hidden');
            // Remove red border from input
            element.previousElementSibling.classList.remove('border-red-500');
        };

        // Clear errors when typing
        document.getElementById('email').addEventListener('input', () => {
            hideError(emailError);
        });

        document.getElementById('password').addEventListener('input', () => {
            hideError(passwordError);
        });

        // Toggle password visibility
        passwordToggle.addEventListener('click', function() {
            const input = document.getElementById('password');
            if (input.type === 'password') {
                input.type = 'text';
                this.classList.remove('fa-eye');
                this.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                this.classList.remove('fa-eye-slash');
                this.classList.add('fa-eye');
            }
        });

        // Form validation and submission
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const email = document.getElementById('email').value.trim();
            const password = document.getElementById('password').value;
            let hasErrors = false;

            // Clear previous errors
            hideError(emailError);
            hideError(passwordError);

            // Validation
            if (!email) {
                showError(emailError, 'Email is required');
                hasErrors = true;
            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                showError(emailError, 'Please enter a valid email address');
                hasErrors = true;
            }

            if (!password) {
                showError(passwordError, 'Password is required');
                hasErrors = true;
            }

            if (hasErrors) return;

            // Show loading spinner
            loadingSpinner.classList.remove('hidden');

            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();
                
                // Hide loading spinner
                loadingSpinner.classList.add('hidden');

                if (data.success) {
                    window.location.href = data.redirectUrl || '/home';
                } else {
                    // Show error message in appropriate field
                    if (data.message.toLowerCase().includes('email')) {
                        showError(emailError, data.message);
                    } else if (data.message.toLowerCase().includes('password')) {
                        showError(passwordError, data.message);
                    } else {
                        // If message doesn't specifically mention email or password
                        showError(emailError, data.message);
                    }
                }
            } catch (error) {
                console.error('Login error:', error);
                loadingSpinner.classList.add('hidden');
                showError(emailError, 'Something went wrong. Please try again.');
            }
        });
    });
    </script>
  </body>
</html>
